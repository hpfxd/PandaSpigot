From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 3 Nov 2021 19:45:25 -0400
Subject: [PATCH] Avoid blocking on Network Manager creation

Per Paper issue 294

diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
index 3910bafa064017f7b3966fec8e6139493d8333e2..74e3b21c29cc208f53113d791513714f8224fad9 100644
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -63,6 +63,16 @@ public class ServerConnection {
     private final List<NetworkManager> h = Collections.synchronizedList(Lists.<NetworkManager>newArrayList());
     private static final boolean disableFlushConsolidation = Boolean.getBoolean("Paper.disableFlushConsolidate"); // PandaSpigot
 
+    // PandaSpigot start - prevent blocking on adding a new network manager while the server is ticking
+    private final java.util.Queue<NetworkManager> pending = new java.util.concurrent.ConcurrentLinkedQueue<>();
+    private void addPending() {
+        NetworkManager manager;
+        while ((manager = pending.poll()) != null) {
+            manager.isPending = false;
+            this.h.add(manager);
+        }
+    }
+    // PandaSpigot end
     public ServerConnection(MinecraftServer minecraftserver) {
         this.f = minecraftserver;
         this.d = true;
@@ -107,8 +117,11 @@ public class ServerConnection {
                     if (!disableFlushConsolidation) channel.pipeline().addFirst(new io.netty.handler.flush.FlushConsolidationHandler()); // PandaSpigot
                     channel.pipeline().addLast("timeout", new ReadTimeoutHandler(30)).addLast("legacy_query", new LegacyPingHandler(ServerConnection.this)).addLast("splitter", new PacketSplitter()).addLast("decoder", new PacketDecoder(EnumProtocolDirection.SERVERBOUND)).addLast("prepender", new PacketPrepender()).addLast("encoder", new PacketEncoder(EnumProtocolDirection.CLIENTBOUND));
                     NetworkManager networkmanager = new NetworkManager(EnumProtocolDirection.SERVERBOUND);
-
-                    ServerConnection.this.h.add(networkmanager);
+    
+                    // PandaSpigot start - prevent blocking on adding a new network manager while the server is ticking
+                    //ServerConnection.this.h.add(networkmanager);
+                    ServerConnection.this.pending.add(networkmanager);
+                    // PandaSpigot end
                     channel.pipeline().addLast("packet_handler", networkmanager);
                     networkmanager.a((PacketListener) (new HandshakeListener(ServerConnection.this.f, networkmanager)));
                 }
@@ -136,6 +149,7 @@ public class ServerConnection {
         List list = this.h;
 
         synchronized (this.h) {
+            this.addPending(); // PandaSpigot
             // Spigot Start
             // This prevents players from 'gaming' the server, and strategically relogging to increase their position in the tick order
             if ( org.spigotmc.SpigotConfig.playerShuffle > 0 && MinecraftServer.currentTick % org.spigotmc.SpigotConfig.playerShuffle == 0 )
