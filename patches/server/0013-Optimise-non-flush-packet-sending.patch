From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Fri, 29 Oct 2021 08:25:50 -0400
Subject: [PATCH] Optimise non-flush packet sending

Places like entity tracking make heavy use of packet sending,
and internally netty will use some very expensive thread wakeup
calls when scheduling.

Thanks to various hacks in ProtocolLib as well as other
plugins, we cannot simply use a queue of packets to group
send on execute. We have to call execute for each packet.

Tux's suggestion here is exactly what was needed - tag
the Runnable indicating it should not make a wakeup call.

Big thanks to Tux for making this possible as I had given
up on this optimisation before he came along.

Locally this patch drops the entity tracker tick by a full 1.5x.

diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index d319ab27416862c2c74af6ecfdb0941652219711..f3379da8d5621f47374892ba87c7fc6a6bef41bd 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -255,6 +255,16 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
             // PandaSpigot end
         } else {
             // PandaSpigot start - Simplify
+            // PandaSpigot start - optimise packets that are not flushed
+            // note: since the type is not dynamic here, we need to actually copy the old executor code
+            // into two branches. On conflict, just re-copy - no changes were made inside the executor code.
+            if (!flush) {
+                io.netty.util.concurrent.AbstractEventExecutor.LazyRunnable run = () -> {
+                    this.doSendPacket(packet, enumprotocol, enumprotocol1, agenericfuturelistener, flush);
+                };
+                this.channel.eventLoop().execute(run);
+            } else {
+            // PandaSpigot end
             this.channel.eventLoop().execute(() -> {
                 /*
                 if (enumprotocol != enumprotocol1) {
@@ -270,6 +280,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
                 */
                 doSendPacket(packet, enumprotocol, enumprotocol1, agenericfuturelistener, flush); // PandaSpigot - add flush parameter
             });
+            }
             // PandaSpigot end
         }
 
