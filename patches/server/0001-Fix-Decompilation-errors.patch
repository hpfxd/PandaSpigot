From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Mon, 6 Aug 2018 16:39:57 -0700
Subject: [PATCH] Fix Decompilation errors


diff --git a/src/main/java/net/minecraft/server/Achievement.java b/src/main/java/net/minecraft/server/Achievement.java
index a110a484f5e696b1443e2a78a7ac6972a3e74720..09b69bb3556b5edaa853ba04e45d885a4d6f7344 100644
--- a/src/main/java/net/minecraft/server/Achievement.java
+++ b/src/main/java/net/minecraft/server/Achievement.java
@@ -23,13 +23,6 @@ public class Achievement extends Statistic {
         this.k = "achievement." + s1 + ".desc";
         this.a = i;
         this.b = j;
-        if (i < AchievementList.a) {
-            a = i;
-        }
-
-        if (j < AchievementList.b) {
-            b = j;
-        }
 
         if (i > AchievementList.c) {
             AchievementList.c = i;
diff --git a/src/main/java/net/minecraft/server/AchievementSet.java b/src/main/java/net/minecraft/server/AchievementSet.java
index 1291aa98c55dd7eaf331cceadf08c6b9142d2407..ad2d9dc58186243092eddc7b63543421c19a6c65 100644
--- a/src/main/java/net/minecraft/server/AchievementSet.java
+++ b/src/main/java/net/minecraft/server/AchievementSet.java
@@ -44,12 +44,4 @@ public class AchievementSet extends ForwardingSet<String> implements IJsonStatis
     protected Set<String> delegate() {
         return this.a;
     }
-
-    protected Collection delegate() {
-        return this.delegate();
-    }
-
-    protected Object delegate() {
-        return this.delegate();
-    }
 }
diff --git a/src/main/java/net/minecraft/server/AttributeModifiable.java b/src/main/java/net/minecraft/server/AttributeModifiable.java
index 93d993be46206810537446758c4f97cc65344ecc..58c9d004306fc3fb58d1bc407fbcfcb0fd081661 100644
--- a/src/main/java/net/minecraft/server/AttributeModifiable.java
+++ b/src/main/java/net/minecraft/server/AttributeModifiable.java
@@ -72,15 +72,10 @@ public class AttributeModifiable implements AttributeInstance {
         if (this.a(attributemodifier.a()) != null) {
             throw new IllegalArgumentException("Modifier is already applied on this attribute!");
         } else {
-            Object object = (Set) this.d.get(attributemodifier.b());
+            Set<AttributeModifier> object = this.d.computeIfAbsent(attributemodifier.b(), k -> Sets.newHashSet());
 
-            if (object == null) {
-                object = Sets.newHashSet();
-                this.d.put(attributemodifier.b(), object);
-            }
-
-            ((Set) this.c.get(Integer.valueOf(attributemodifier.c()))).add(attributemodifier);
-            ((Set) object).add(attributemodifier);
+            this.c.get(attributemodifier.c()).add(attributemodifier);
+            object.add(attributemodifier);
             this.e.put(attributemodifier.a(), attributemodifier);
             this.f();
         }
diff --git a/src/main/java/net/minecraft/server/BlockDataAbstract.java b/src/main/java/net/minecraft/server/BlockDataAbstract.java
index 487ae01ecb6d21b47777e650a9cb0262455996ed..77d2a078effff14eb9025d85e6e37c98709971b9 100644
--- a/src/main/java/net/minecraft/server/BlockDataAbstract.java
+++ b/src/main/java/net/minecraft/server/BlockDataAbstract.java
@@ -29,11 +29,11 @@ public abstract class BlockDataAbstract implements IBlockData {
     public BlockDataAbstract() {}
 
     public <T extends Comparable<T>> IBlockData a(IBlockState<T> iblockstate) {
-        return this.set(iblockstate, (Comparable) a(iblockstate.c(), this.get(iblockstate)));
+        return this.set(iblockstate, a(iblockstate.c(), this.get(iblockstate)));
     }
 
     protected static <T> T a(Collection<T> collection, T t0) {
-        Iterator iterator = collection.iterator();
+        Iterator<T> iterator = collection.iterator();
 
         do {
             if (!iterator.hasNext()) {
diff --git a/src/main/java/net/minecraft/server/BlockPredicate.java b/src/main/java/net/minecraft/server/BlockPredicate.java
index 3408e4e06e1ab6b25c55112cfeeece27ce464fca..28af027e1336cb636f1c8bc985b515ef52b0ef62 100644
--- a/src/main/java/net/minecraft/server/BlockPredicate.java
+++ b/src/main/java/net/minecraft/server/BlockPredicate.java
@@ -18,7 +18,7 @@ public class BlockPredicate implements Predicate<IBlockData> {
         return iblockdata != null && iblockdata.getBlock() == this.a;
     }
 
-    public boolean apply(Object object) {
-        return this.a((IBlockData) object);
+    public boolean apply(IBlockData object) {
+        return this.a(object);
     }
 }
diff --git a/src/main/java/net/minecraft/server/BlockStateBoolean.java b/src/main/java/net/minecraft/server/BlockStateBoolean.java
index 7fb09600e103a6428a010eb511bf97ca3a955106..d4c9a3d75a4cfc880ead34ed1b1a52a4035119e8 100644
--- a/src/main/java/net/minecraft/server/BlockStateBoolean.java
+++ b/src/main/java/net/minecraft/server/BlockStateBoolean.java
@@ -22,8 +22,4 @@ public class BlockStateBoolean extends BlockState<Boolean> {
     public String a(Boolean obool) {
         return obool.toString();
     }
-
-    public String a(Comparable comparable) {
-        return this.a((Boolean) comparable);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/BlockStateEnum.java b/src/main/java/net/minecraft/server/BlockStateEnum.java
index 0b555dff8ca4252b98857797b5d547859169079d..b76de8d629d88cf3dcd352afb0dcb63fb17b4a9a 100644
--- a/src/main/java/net/minecraft/server/BlockStateEnum.java
+++ b/src/main/java/net/minecraft/server/BlockStateEnum.java
@@ -18,10 +18,10 @@ public class BlockStateEnum<T extends Enum<T> & INamable> extends BlockState<T>
     protected BlockStateEnum(String s, Class<T> oclass, Collection<T> collection) {
         super(s, oclass);
         this.a = ImmutableSet.copyOf(collection);
-        Iterator iterator = collection.iterator();
+        Iterator<T> iterator = collection.iterator();
 
         while (iterator.hasNext()) {
-            Enum oenum = (Enum) iterator.next();
+            T oenum = iterator.next();
             String s1 = ((INamable) oenum).getName();
 
             if (this.b.containsKey(s1)) {
@@ -56,8 +56,4 @@ public class BlockStateEnum<T extends Enum<T> & INamable> extends BlockState<T>
     public static <T extends Enum<T> & INamable> BlockStateEnum<T> a(String s, Class<T> oclass, Collection<T> collection) {
         return new BlockStateEnum(s, oclass, collection);
     }
-
-    public String a(Comparable comparable) {
-        return this.a((Enum) comparable);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/BlockStateInteger.java b/src/main/java/net/minecraft/server/BlockStateInteger.java
index 4e7e489c236cf5e88658cfb694c3d49c32403e5c..7eefc2261a3be9fe98a166371d402525b1a488ef 100644
--- a/src/main/java/net/minecraft/server/BlockStateInteger.java
+++ b/src/main/java/net/minecraft/server/BlockStateInteger.java
@@ -60,8 +60,4 @@ public class BlockStateInteger extends BlockState<Integer> {
     public String a(Integer integer) {
         return integer.toString();
     }
-
-    public String a(Comparable comparable) {
-        return this.a((Integer) comparable);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/BlockStateList.java b/src/main/java/net/minecraft/server/BlockStateList.java
index 8a815a64cd793feaea414b0a0d92709818aff525..6559cc50224064b6f69f389ef62978627292f369 100644
--- a/src/main/java/net/minecraft/server/BlockStateList.java
+++ b/src/main/java/net/minecraft/server/BlockStateList.java
@@ -123,7 +123,7 @@ public class BlockStateList {
             if (!this.b.containsKey(iblockstate)) {
                 throw new IllegalArgumentException("Cannot get property " + iblockstate + " as it does not exist in " + this.a.P());
             } else {
-                return (Comparable) iblockstate.b().cast(this.b.get(iblockstate));
+                return iblockstate.b().cast(this.b.get(iblockstate));
             }
         }
 
diff --git a/src/main/java/net/minecraft/server/BlockStatePredicate.java b/src/main/java/net/minecraft/server/BlockStatePredicate.java
index a1a445aa135e46ce0ab0a94d8b441122647d3216..4c97a4cd6fbc1c37a0babbcacf5d61f398b1089e 100644
--- a/src/main/java/net/minecraft/server/BlockStatePredicate.java
+++ b/src/main/java/net/minecraft/server/BlockStatePredicate.java
@@ -50,7 +50,7 @@ public class BlockStatePredicate implements Predicate<IBlockData> {
         }
     }
 
-    public boolean apply(Object object) {
-        return this.a((IBlockData) object);
+    public boolean apply(IBlockData object) {
+        return this.a(object);
     }
 }
diff --git a/src/main/java/net/minecraft/server/ChatTypeAdapterFactory.java b/src/main/java/net/minecraft/server/ChatTypeAdapterFactory.java
index bceccf341c2f4402364065209e53da0bcfb93ce3..2f2dbcd8f4c5e64316de5af81ae051d5cc69d800 100644
--- a/src/main/java/net/minecraft/server/ChatTypeAdapterFactory.java
+++ b/src/main/java/net/minecraft/server/ChatTypeAdapterFactory.java
@@ -17,22 +17,22 @@ public class ChatTypeAdapterFactory implements TypeAdapterFactory {
     public ChatTypeAdapterFactory() {}
 
     public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typetoken) {
-        Class oclass = typetoken.getRawType();
+        Class<? super T> oclass = typetoken.getRawType();
 
         if (!oclass.isEnum()) {
             return null;
         } else {
-            final HashMap hashmap = Maps.newHashMap();
+            final HashMap<String, T> hashmap = Maps.newHashMap();
             Object[] aobject = oclass.getEnumConstants();
             int i = aobject.length;
 
             for (int j = 0; j < i; ++j) {
                 Object object = aobject[j];
 
-                hashmap.put(this.a(object), object);
+                hashmap.put(this.a(object), (T) object);
             }
 
-            return new TypeAdapter() {
+            return new TypeAdapter<T>() {
                 public void write(JsonWriter jsonwriter, T t0) throws IOException {
                     if (t0 == null) {
                         jsonwriter.nullValue();
diff --git a/src/main/java/net/minecraft/server/CommandAbstract.java b/src/main/java/net/minecraft/server/CommandAbstract.java
index 8de31ea2569a2cb68b5a5a2b4d61fbb7007a824d..11218808402b3d88c99b4b44f654907c842d25d9 100644
--- a/src/main/java/net/minecraft/server/CommandAbstract.java
+++ b/src/main/java/net/minecraft/server/CommandAbstract.java
@@ -161,7 +161,7 @@ public abstract class CommandAbstract implements ICommand {
     }
 
     public static <T extends Entity> T a(ICommandListener icommandlistener, String s, Class<? extends T> oclass) throws ExceptionEntityNotFound {
-        Object object = PlayerSelector.getEntity(icommandlistener, s, oclass);
+        Entity object = PlayerSelector.getEntity(icommandlistener, s, oclass);
         MinecraftServer minecraftserver = MinecraftServer.getServer();
 
         if (object == null) {
@@ -182,7 +182,7 @@ public abstract class CommandAbstract implements ICommand {
         }
 
         if (object != null && oclass.isAssignableFrom(object.getClass())) {
-            return (Entity) object;
+            return (T) object;
         } else {
             throw new ExceptionEntityNotFound();
         }
@@ -521,8 +521,8 @@ public abstract class CommandAbstract implements ICommand {
         return this.getCommand().compareTo(icommand.getCommand());
     }
 
-    public int compareTo(Object object) {
-        return this.a((ICommand) object);
+    public int compareTo(ICommand object) {
+        return this.a(object);
     }
 
     public static class CommandNumber {
diff --git a/src/main/java/net/minecraft/server/CustomWorldSettingsFinal.java b/src/main/java/net/minecraft/server/CustomWorldSettingsFinal.java
index 4948ad3499b2eef73cbb46a56ae55095a6bf39a7..0b5785673c53a888e13e1e07f63f32277df70783 100644
--- a/src/main/java/net/minecraft/server/CustomWorldSettingsFinal.java
+++ b/src/main/java/net/minecraft/server/CustomWorldSettingsFinal.java
@@ -284,92 +284,92 @@ public class CustomWorldSettingsFinal {
         public JsonElement a(CustomWorldSettingsFinal.CustomWorldSettings customworldsettingsfinal_customworldsettings, Type type, JsonSerializationContext jsonserializationcontext) {
             JsonObject jsonobject = new JsonObject();
 
-            jsonobject.addProperty("coordinateScale", Float.valueOf(customworldsettingsfinal_customworldsettings.b));
-            jsonobject.addProperty("heightScale", Float.valueOf(customworldsettingsfinal_customworldsettings.c));
-            jsonobject.addProperty("lowerLimitScale", Float.valueOf(customworldsettingsfinal_customworldsettings.e));
-            jsonobject.addProperty("upperLimitScale", Float.valueOf(customworldsettingsfinal_customworldsettings.d));
-            jsonobject.addProperty("depthNoiseScaleX", Float.valueOf(customworldsettingsfinal_customworldsettings.f));
-            jsonobject.addProperty("depthNoiseScaleZ", Float.valueOf(customworldsettingsfinal_customworldsettings.g));
-            jsonobject.addProperty("depthNoiseScaleExponent", Float.valueOf(customworldsettingsfinal_customworldsettings.h));
-            jsonobject.addProperty("mainNoiseScaleX", Float.valueOf(customworldsettingsfinal_customworldsettings.i));
-            jsonobject.addProperty("mainNoiseScaleY", Float.valueOf(customworldsettingsfinal_customworldsettings.j));
-            jsonobject.addProperty("mainNoiseScaleZ", Float.valueOf(customworldsettingsfinal_customworldsettings.k));
-            jsonobject.addProperty("baseSize", Float.valueOf(customworldsettingsfinal_customworldsettings.l));
-            jsonobject.addProperty("stretchY", Float.valueOf(customworldsettingsfinal_customworldsettings.m));
-            jsonobject.addProperty("biomeDepthWeight", Float.valueOf(customworldsettingsfinal_customworldsettings.n));
-            jsonobject.addProperty("biomeDepthOffset", Float.valueOf(customworldsettingsfinal_customworldsettings.o));
-            jsonobject.addProperty("biomeScaleWeight", Float.valueOf(customworldsettingsfinal_customworldsettings.p));
-            jsonobject.addProperty("biomeScaleOffset", Float.valueOf(customworldsettingsfinal_customworldsettings.q));
-            jsonobject.addProperty("seaLevel", Integer.valueOf(customworldsettingsfinal_customworldsettings.r));
-            jsonobject.addProperty("useCaves", Boolean.valueOf(customworldsettingsfinal_customworldsettings.s));
-            jsonobject.addProperty("useDungeons", Boolean.valueOf(customworldsettingsfinal_customworldsettings.t));
-            jsonobject.addProperty("dungeonChance", Integer.valueOf(customworldsettingsfinal_customworldsettings.u));
-            jsonobject.addProperty("useStrongholds", Boolean.valueOf(customworldsettingsfinal_customworldsettings.v));
-            jsonobject.addProperty("useVillages", Boolean.valueOf(customworldsettingsfinal_customworldsettings.w));
-            jsonobject.addProperty("useMineShafts", Boolean.valueOf(customworldsettingsfinal_customworldsettings.x));
-            jsonobject.addProperty("useTemples", Boolean.valueOf(customworldsettingsfinal_customworldsettings.y));
-            jsonobject.addProperty("useMonuments", Boolean.valueOf(customworldsettingsfinal_customworldsettings.z));
-            jsonobject.addProperty("useRavines", Boolean.valueOf(customworldsettingsfinal_customworldsettings.A));
-            jsonobject.addProperty("useWaterLakes", Boolean.valueOf(customworldsettingsfinal_customworldsettings.B));
-            jsonobject.addProperty("waterLakeChance", Integer.valueOf(customworldsettingsfinal_customworldsettings.C));
-            jsonobject.addProperty("useLavaLakes", Boolean.valueOf(customworldsettingsfinal_customworldsettings.D));
-            jsonobject.addProperty("lavaLakeChance", Integer.valueOf(customworldsettingsfinal_customworldsettings.E));
-            jsonobject.addProperty("useLavaOceans", Boolean.valueOf(customworldsettingsfinal_customworldsettings.F));
-            jsonobject.addProperty("fixedBiome", Integer.valueOf(customworldsettingsfinal_customworldsettings.G));
-            jsonobject.addProperty("biomeSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.H));
-            jsonobject.addProperty("riverSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.I));
-            jsonobject.addProperty("dirtSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.J));
-            jsonobject.addProperty("dirtCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.K));
-            jsonobject.addProperty("dirtMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.L));
-            jsonobject.addProperty("dirtMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.M));
-            jsonobject.addProperty("gravelSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.N));
-            jsonobject.addProperty("gravelCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.O));
-            jsonobject.addProperty("gravelMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.P));
-            jsonobject.addProperty("gravelMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.Q));
-            jsonobject.addProperty("graniteSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.R));
-            jsonobject.addProperty("graniteCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.S));
-            jsonobject.addProperty("graniteMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.T));
-            jsonobject.addProperty("graniteMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.U));
-            jsonobject.addProperty("dioriteSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.V));
-            jsonobject.addProperty("dioriteCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.W));
-            jsonobject.addProperty("dioriteMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.X));
-            jsonobject.addProperty("dioriteMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.Y));
-            jsonobject.addProperty("andesiteSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.Z));
-            jsonobject.addProperty("andesiteCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.aa));
-            jsonobject.addProperty("andesiteMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.ab));
-            jsonobject.addProperty("andesiteMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.ac));
-            jsonobject.addProperty("coalSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.ad));
-            jsonobject.addProperty("coalCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.ae));
-            jsonobject.addProperty("coalMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.af));
-            jsonobject.addProperty("coalMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.ag));
-            jsonobject.addProperty("ironSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.ah));
-            jsonobject.addProperty("ironCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.ai));
-            jsonobject.addProperty("ironMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.aj));
-            jsonobject.addProperty("ironMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.ak));
-            jsonobject.addProperty("goldSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.al));
-            jsonobject.addProperty("goldCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.am));
-            jsonobject.addProperty("goldMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.an));
-            jsonobject.addProperty("goldMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.ao));
-            jsonobject.addProperty("redstoneSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.ap));
-            jsonobject.addProperty("redstoneCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.aq));
-            jsonobject.addProperty("redstoneMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.ar));
-            jsonobject.addProperty("redstoneMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.as));
-            jsonobject.addProperty("diamondSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.at));
-            jsonobject.addProperty("diamondCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.au));
-            jsonobject.addProperty("diamondMinHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.av));
-            jsonobject.addProperty("diamondMaxHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.aw));
-            jsonobject.addProperty("lapisSize", Integer.valueOf(customworldsettingsfinal_customworldsettings.ax));
-            jsonobject.addProperty("lapisCount", Integer.valueOf(customworldsettingsfinal_customworldsettings.ay));
-            jsonobject.addProperty("lapisCenterHeight", Integer.valueOf(customworldsettingsfinal_customworldsettings.az));
-            jsonobject.addProperty("lapisSpread", Integer.valueOf(customworldsettingsfinal_customworldsettings.aA));
+            jsonobject.addProperty("coordinateScale", customworldsettingsfinal_customworldsettings.b);
+            jsonobject.addProperty("heightScale", customworldsettingsfinal_customworldsettings.c);
+            jsonobject.addProperty("lowerLimitScale", customworldsettingsfinal_customworldsettings.e);
+            jsonobject.addProperty("upperLimitScale", customworldsettingsfinal_customworldsettings.d);
+            jsonobject.addProperty("depthNoiseScaleX", customworldsettingsfinal_customworldsettings.f);
+            jsonobject.addProperty("depthNoiseScaleZ", customworldsettingsfinal_customworldsettings.g);
+            jsonobject.addProperty("depthNoiseScaleExponent", customworldsettingsfinal_customworldsettings.h);
+            jsonobject.addProperty("mainNoiseScaleX", customworldsettingsfinal_customworldsettings.i);
+            jsonobject.addProperty("mainNoiseScaleY", customworldsettingsfinal_customworldsettings.j);
+            jsonobject.addProperty("mainNoiseScaleZ", customworldsettingsfinal_customworldsettings.k);
+            jsonobject.addProperty("baseSize", customworldsettingsfinal_customworldsettings.l);
+            jsonobject.addProperty("stretchY", customworldsettingsfinal_customworldsettings.m);
+            jsonobject.addProperty("biomeDepthWeight", customworldsettingsfinal_customworldsettings.n);
+            jsonobject.addProperty("biomeDepthOffset", customworldsettingsfinal_customworldsettings.o);
+            jsonobject.addProperty("biomeScaleWeight", customworldsettingsfinal_customworldsettings.p);
+            jsonobject.addProperty("biomeScaleOffset", customworldsettingsfinal_customworldsettings.q);
+            jsonobject.addProperty("seaLevel", customworldsettingsfinal_customworldsettings.r);
+            jsonobject.addProperty("useCaves", customworldsettingsfinal_customworldsettings.s);
+            jsonobject.addProperty("useDungeons", customworldsettingsfinal_customworldsettings.t);
+            jsonobject.addProperty("dungeonChance", customworldsettingsfinal_customworldsettings.u);
+            jsonobject.addProperty("useStrongholds", customworldsettingsfinal_customworldsettings.v);
+            jsonobject.addProperty("useVillages", customworldsettingsfinal_customworldsettings.w);
+            jsonobject.addProperty("useMineShafts", customworldsettingsfinal_customworldsettings.x);
+            jsonobject.addProperty("useTemples", customworldsettingsfinal_customworldsettings.y);
+            jsonobject.addProperty("useMonuments", customworldsettingsfinal_customworldsettings.z);
+            jsonobject.addProperty("useRavines", customworldsettingsfinal_customworldsettings.A);
+            jsonobject.addProperty("useWaterLakes", customworldsettingsfinal_customworldsettings.B);
+            jsonobject.addProperty("waterLakeChance", customworldsettingsfinal_customworldsettings.C);
+            jsonobject.addProperty("useLavaLakes", customworldsettingsfinal_customworldsettings.D);
+            jsonobject.addProperty("lavaLakeChance", customworldsettingsfinal_customworldsettings.E);
+            jsonobject.addProperty("useLavaOceans", customworldsettingsfinal_customworldsettings.F);
+            jsonobject.addProperty("fixedBiome", customworldsettingsfinal_customworldsettings.G);
+            jsonobject.addProperty("biomeSize", customworldsettingsfinal_customworldsettings.H);
+            jsonobject.addProperty("riverSize", customworldsettingsfinal_customworldsettings.I);
+            jsonobject.addProperty("dirtSize", customworldsettingsfinal_customworldsettings.J);
+            jsonobject.addProperty("dirtCount", customworldsettingsfinal_customworldsettings.K);
+            jsonobject.addProperty("dirtMinHeight", customworldsettingsfinal_customworldsettings.L);
+            jsonobject.addProperty("dirtMaxHeight", customworldsettingsfinal_customworldsettings.M);
+            jsonobject.addProperty("gravelSize", customworldsettingsfinal_customworldsettings.N);
+            jsonobject.addProperty("gravelCount", customworldsettingsfinal_customworldsettings.O);
+            jsonobject.addProperty("gravelMinHeight", customworldsettingsfinal_customworldsettings.P);
+            jsonobject.addProperty("gravelMaxHeight", customworldsettingsfinal_customworldsettings.Q);
+            jsonobject.addProperty("graniteSize", customworldsettingsfinal_customworldsettings.R);
+            jsonobject.addProperty("graniteCount", customworldsettingsfinal_customworldsettings.S);
+            jsonobject.addProperty("graniteMinHeight", customworldsettingsfinal_customworldsettings.T);
+            jsonobject.addProperty("graniteMaxHeight", customworldsettingsfinal_customworldsettings.U);
+            jsonobject.addProperty("dioriteSize", customworldsettingsfinal_customworldsettings.V);
+            jsonobject.addProperty("dioriteCount", customworldsettingsfinal_customworldsettings.W);
+            jsonobject.addProperty("dioriteMinHeight", customworldsettingsfinal_customworldsettings.X);
+            jsonobject.addProperty("dioriteMaxHeight", customworldsettingsfinal_customworldsettings.Y);
+            jsonobject.addProperty("andesiteSize", customworldsettingsfinal_customworldsettings.Z);
+            jsonobject.addProperty("andesiteCount", customworldsettingsfinal_customworldsettings.aa);
+            jsonobject.addProperty("andesiteMinHeight", customworldsettingsfinal_customworldsettings.ab);
+            jsonobject.addProperty("andesiteMaxHeight", customworldsettingsfinal_customworldsettings.ac);
+            jsonobject.addProperty("coalSize", customworldsettingsfinal_customworldsettings.ad);
+            jsonobject.addProperty("coalCount", customworldsettingsfinal_customworldsettings.ae);
+            jsonobject.addProperty("coalMinHeight", customworldsettingsfinal_customworldsettings.af);
+            jsonobject.addProperty("coalMaxHeight", customworldsettingsfinal_customworldsettings.ag);
+            jsonobject.addProperty("ironSize", customworldsettingsfinal_customworldsettings.ah);
+            jsonobject.addProperty("ironCount", customworldsettingsfinal_customworldsettings.ai);
+            jsonobject.addProperty("ironMinHeight", customworldsettingsfinal_customworldsettings.aj);
+            jsonobject.addProperty("ironMaxHeight", customworldsettingsfinal_customworldsettings.ak);
+            jsonobject.addProperty("goldSize", customworldsettingsfinal_customworldsettings.al);
+            jsonobject.addProperty("goldCount", customworldsettingsfinal_customworldsettings.am);
+            jsonobject.addProperty("goldMinHeight", customworldsettingsfinal_customworldsettings.an);
+            jsonobject.addProperty("goldMaxHeight", customworldsettingsfinal_customworldsettings.ao);
+            jsonobject.addProperty("redstoneSize", customworldsettingsfinal_customworldsettings.ap);
+            jsonobject.addProperty("redstoneCount", customworldsettingsfinal_customworldsettings.aq);
+            jsonobject.addProperty("redstoneMinHeight", customworldsettingsfinal_customworldsettings.ar);
+            jsonobject.addProperty("redstoneMaxHeight", customworldsettingsfinal_customworldsettings.as);
+            jsonobject.addProperty("diamondSize", customworldsettingsfinal_customworldsettings.at);
+            jsonobject.addProperty("diamondCount", customworldsettingsfinal_customworldsettings.au);
+            jsonobject.addProperty("diamondMinHeight", customworldsettingsfinal_customworldsettings.av);
+            jsonobject.addProperty("diamondMaxHeight", customworldsettingsfinal_customworldsettings.aw);
+            jsonobject.addProperty("lapisSize", customworldsettingsfinal_customworldsettings.ax);
+            jsonobject.addProperty("lapisCount", customworldsettingsfinal_customworldsettings.ay);
+            jsonobject.addProperty("lapisCenterHeight", customworldsettingsfinal_customworldsettings.az);
+            jsonobject.addProperty("lapisSpread", customworldsettingsfinal_customworldsettings.aA);
             return jsonobject;
         }
 
-        public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
+        public CustomWorldSettingsFinal.CustomWorldSettings deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
             return this.a(jsonelement, type, jsondeserializationcontext);
         }
 
-        public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
+        public JsonElement serialize(CustomWorldSettingsFinal.CustomWorldSettings object, Type type, JsonSerializationContext jsonserializationcontext) {
             return this.a((CustomWorldSettingsFinal.CustomWorldSettings) object, type, jsonserializationcontext);
         }
     }
diff --git a/src/main/java/net/minecraft/server/DedicatedPlayerList.java b/src/main/java/net/minecraft/server/DedicatedPlayerList.java
index c5de460c64e42cf53d2510caa7245e1a08ec07b8..75dc45f2e5fe59333b0e11d50209b1d1cb4ce947 100644
--- a/src/main/java/net/minecraft/server/DedicatedPlayerList.java
+++ b/src/main/java/net/minecraft/server/DedicatedPlayerList.java
@@ -145,8 +145,4 @@ public class DedicatedPlayerList extends PlayerList {
     public boolean f(GameProfile gameprofile) {
         return this.getOPs().b(gameprofile);
     }
-
-    public MinecraftServer getServer() {
-        return this.getServer();
-    }
 }
diff --git a/src/main/java/net/minecraft/server/DemoWorldServer.java b/src/main/java/net/minecraft/server/DemoWorldServer.java
index bef6f8c2a5fa6303d4181437a9f1444347f42afe..de19f10022a84714db0c23fe3ca40ed3b7582590 100644
--- a/src/main/java/net/minecraft/server/DemoWorldServer.java
+++ b/src/main/java/net/minecraft/server/DemoWorldServer.java
@@ -5,8 +5,8 @@ public class DemoWorldServer extends WorldServer {
     private static final long I = (long) "North Carolina".hashCode();
     public static final WorldSettings a = (new WorldSettings(DemoWorldServer.I, WorldSettings.EnumGamemode.SURVIVAL, true, false, WorldType.NORMAL)).a();
 
-    public DemoWorldServer(MinecraftServer minecraftserver, IDataManager idatamanager, WorldData worlddata, int i, MethodProfiler methodprofiler) {
-        super(minecraftserver, idatamanager, worlddata, i, methodprofiler);
+    public DemoWorldServer(MinecraftServer minecraftserver, IDataManager idatamanager, WorldData worlddata, int i, MethodProfiler methodprofiler, org.bukkit.World.Environment env, org.bukkit.generator.ChunkGenerator gen) {
+        super(minecraftserver, idatamanager, worlddata, i, methodprofiler, env, gen);
         this.worldData.a(DemoWorldServer.a);
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntityGuardian.java b/src/main/java/net/minecraft/server/EntityGuardian.java
index bcac87081e1efa5e57cbc66783f7e187dd771091..4dfe5a68f733e9c7533569e6e7dda9c8a28f7afe 100644
--- a/src/main/java/net/minecraft/server/EntityGuardian.java
+++ b/src/main/java/net/minecraft/server/EntityGuardian.java
@@ -516,8 +516,8 @@ public class EntityGuardian extends EntityMonster {
             return (entityliving instanceof EntityHuman || entityliving instanceof EntitySquid) && entityliving.h(this.a) > 9.0D;
         }
 
-        public boolean apply(Object object) {
-            return this.a((EntityLiving) object);
+        public boolean apply(EntityLiving object) {
+            return this.a(object);
         }
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index 4bf790cdffdbc8950450644a813d9c7bb539793d..0446e2be5003e8aa785618de48767d160dd32b19 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -72,12 +72,12 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
     }
 
     protected void h() {
-        this.datawatcher.a(17, new Integer(0));
-        this.datawatcher.a(18, new Integer(1));
-        this.datawatcher.a(19, new Float(0.0F));
-        this.datawatcher.a(20, new Integer(0));
-        this.datawatcher.a(21, new Integer(6));
-        this.datawatcher.a(22, Byte.valueOf((byte) 0));
+        this.datawatcher.a(17, 0);
+        this.datawatcher.a(18, 1);
+        this.datawatcher.a(19, 0.0F);
+        this.datawatcher.a(20, 0);
+        this.datawatcher.a(21, 6);
+        this.datawatcher.a(22, (byte) 0);
     }
 
     public AxisAlignedBB j(Entity entity) {
@@ -772,7 +772,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
     }
 
     public void setDamage(float f) {
-        this.datawatcher.watch(19, Float.valueOf(f));
+        this.datawatcher.watch(19, f);
     }
 
     public float getDamage() {
@@ -780,7 +780,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
     }
 
     public void j(int i) {
-        this.datawatcher.watch(17, Integer.valueOf(i));
+        this.datawatcher.watch(17, i);
     }
 
     public int getType() {
@@ -788,7 +788,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
     }
 
     public void k(int i) {
-        this.datawatcher.watch(18, Integer.valueOf(i));
+        this.datawatcher.watch(18, i);
     }
 
     public int r() {
@@ -814,12 +814,12 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
     }
 
     public void setDisplayBlock(IBlockData iblockdata) {
-        this.getDataWatcher().watch(20, Integer.valueOf(Block.getCombinedId(iblockdata)));
+        this.getDataWatcher().watch(20, Block.getCombinedId(iblockdata));
         this.a(true);
     }
 
     public void SetDisplayBlockOffset(int i) {
-        this.getDataWatcher().watch(21, Integer.valueOf(i));
+        this.getDataWatcher().watch(21, i);
         this.a(true);
     }
 
@@ -828,7 +828,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
     }
 
     public void a(boolean flag) {
-        this.getDataWatcher().watch(22, Byte.valueOf((byte) (flag ? 1 : 0)));
+        this.getDataWatcher().watch(22, (byte) (flag ? 1 : 0));
     }
 
     public void setCustomName(String s) {
@@ -956,7 +956,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
         }
 
         public static EntityMinecartAbstract.EnumMinecartType a(int i) {
-            EntityMinecartAbstract.EnumMinecartType entityminecartabstract_enumminecarttype = (EntityMinecartAbstract.EnumMinecartType) EntityMinecartAbstract.EnumMinecartType.h.get(Integer.valueOf(i));
+            EntityMinecartAbstract.EnumMinecartType entityminecartabstract_enumminecarttype = (EntityMinecartAbstract.EnumMinecartType) EntityMinecartAbstract.EnumMinecartType.h.get(i);
 
             return entityminecartabstract_enumminecarttype == null ? EntityMinecartAbstract.EnumMinecartType.RIDEABLE : entityminecartabstract_enumminecarttype;
         }
@@ -968,7 +968,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
             for (int j = 0; j < i; ++j) {
                 EntityMinecartAbstract.EnumMinecartType entityminecartabstract_enumminecarttype = aentityminecartabstract_enumminecarttype[j];
 
-                EntityMinecartAbstract.EnumMinecartType.h.put(Integer.valueOf(entityminecartabstract_enumminecarttype.a()), entityminecartabstract_enumminecarttype);
+                EntityMinecartAbstract.EnumMinecartType.h.put(entityminecartabstract_enumminecarttype.a(), entityminecartabstract_enumminecarttype);
             }
 
         }
diff --git a/src/main/java/net/minecraft/server/EntityTameableAnimal.java b/src/main/java/net/minecraft/server/EntityTameableAnimal.java
index 2b170a15a42b257e92178df8124fd4ce64fa26c9..1cc087d0470c60e26f7c585e1d50156bce6b1f46 100644
--- a/src/main/java/net/minecraft/server/EntityTameableAnimal.java
+++ b/src/main/java/net/minecraft/server/EntityTameableAnimal.java
@@ -164,8 +164,4 @@ public abstract class EntityTameableAnimal extends EntityAnimal implements Entit
 
         super.die(damagesource);
     }
-
-    public Entity getOwner() {
-        return this.getOwner();
-    }
 }
diff --git a/src/main/java/net/minecraft/server/EnumDirection.java b/src/main/java/net/minecraft/server/EnumDirection.java
index 1284478d375a47d3e1d8f4fc71a930a5fcad35c9..485dcd80ee45909aa25a4528216473516ebc6766 100644
--- a/src/main/java/net/minecraft/server/EnumDirection.java
+++ b/src/main/java/net/minecraft/server/EnumDirection.java
@@ -275,8 +275,8 @@ public enum EnumDirection implements INamable {
             return Iterators.forArray(this.a());
         }
 
-        public boolean apply(Object object) {
-            return this.a((EnumDirection) object);
+        public boolean apply(EnumDirection object) {
+            return this.a(object);
         }
     }
 
@@ -342,8 +342,8 @@ public enum EnumDirection implements INamable {
             return this.e;
         }
 
-        public boolean apply(Object object) {
-            return this.a((EnumDirection) object);
+        public boolean apply(EnumDirection object) {
+            return this.a(object);
         }
 
         static {
diff --git a/src/main/java/net/minecraft/server/EnumProtocol.java b/src/main/java/net/minecraft/server/EnumProtocol.java
index 7196025da85ff3acb9d9327813d78e498fd47a7d..393ffc8f1b4e31562f701bceaac6678a4f919561 100644
--- a/src/main/java/net/minecraft/server/EnumProtocol.java
+++ b/src/main/java/net/minecraft/server/EnumProtocol.java
@@ -147,20 +147,15 @@ public enum EnumProtocol {
     }
 
     protected EnumProtocol a(EnumProtocolDirection enumprotocoldirection, Class<? extends Packet> oclass) {
-        Object object = (BiMap) this.j.get(enumprotocoldirection);
-
-        if (object == null) {
-            object = HashBiMap.create();
-            this.j.put(enumprotocoldirection, object);
-        }
-
-        if (((BiMap) object).containsValue(oclass)) {
-            String s = enumprotocoldirection + " packet " + oclass + " is already known to ID " + ((BiMap) object).inverse().get(oclass);
+        BiMap<Integer, Class<? extends Packet>> map = this.j.computeIfAbsent(enumprotocoldirection, k -> HashBiMap.create());
+    
+        if (map.containsValue(oclass)) {
+            String s = enumprotocoldirection + " packet " + oclass + " is already known to ID " + ((BiMap) map).inverse().get(oclass);
 
             LogManager.getLogger().fatal(s);
             throw new IllegalArgumentException(s);
         } else {
-            ((BiMap) object).put(Integer.valueOf(((BiMap) object).size()), oclass);
+            map.put(map.size(), oclass);
             return this;
         }
     }
diff --git a/src/main/java/net/minecraft/server/GameProfileBanList.java b/src/main/java/net/minecraft/server/GameProfileBanList.java
index 737035bf45620c03b1b4b2dbdb240036bf8b607a..125932c5ddbd3c195f28002007b14df96adce058 100644
--- a/src/main/java/net/minecraft/server/GameProfileBanList.java
+++ b/src/main/java/net/minecraft/server/GameProfileBanList.java
@@ -52,7 +52,7 @@ public class GameProfileBanList extends JsonList<GameProfile, GameProfileBanEntr
         return (GameProfile) gameprofilebanentry.getKey();
     }
 
-    protected String a(Object object) {
-        return this.b((GameProfile) object);
+    protected String a(GameProfile object) {
+        return this.b(object);
     }
 }
diff --git a/src/main/java/net/minecraft/server/IChatBaseComponent.java b/src/main/java/net/minecraft/server/IChatBaseComponent.java
index b187a851842baf97f9d9cda66803befe3378a29e..43fa6d6ca4ae8265a4a77ebce9f655a48c38929a 100644
--- a/src/main/java/net/minecraft/server/IChatBaseComponent.java
+++ b/src/main/java/net/minecraft/server/IChatBaseComponent.java
@@ -220,11 +220,11 @@ public interface IChatBaseComponent extends Iterable<IChatBaseComponent> {
             return (IChatBaseComponent) IChatBaseComponent.ChatSerializer.a.fromJson(s, IChatBaseComponent.class);
         }
 
-        public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
-            return this.a((IChatBaseComponent) object, type, jsonserializationcontext);
+        public JsonElement serialize(IChatBaseComponent object, Type type, JsonSerializationContext jsonserializationcontext) {
+            return this.a(object, type, jsonserializationcontext);
         }
 
-        public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
+        public IChatBaseComponent deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
             return this.a(jsonelement, type, jsondeserializationcontext);
         }
 
diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java
index 81c45a95abfbc9ef0fea0c8e29001f25b701012d..1dd636d25ac1c9d851cfe258e4191cd06c8d6882 100644
--- a/src/main/java/net/minecraft/server/IEntitySelector.java
+++ b/src/main/java/net/minecraft/server/IEntitySelector.java
@@ -61,8 +61,8 @@ public final class IEntitySelector {
             }
         }
 
-        public boolean apply(Object object) {
-            return this.a((Entity) object);
+        public boolean apply(Entity object) {
+            return this.a(object);
         }
     }
 }
diff --git a/src/main/java/net/minecraft/server/InsensitiveStringMap.java b/src/main/java/net/minecraft/server/InsensitiveStringMap.java
index 2d34bed09bcf5451428b7bd64d0f08a99ef10f08..1d67b2877b9334a52124296011e612c2cde82d1b 100644
--- a/src/main/java/net/minecraft/server/InsensitiveStringMap.java
+++ b/src/main/java/net/minecraft/server/InsensitiveStringMap.java
@@ -47,7 +47,7 @@ public class InsensitiveStringMap<V> implements Map<String, V> {
         while (iterator.hasNext()) {
             Entry entry = (Entry) iterator.next();
 
-            this.a((String) entry.getKey(), entry.getValue());
+            this.a((String) entry.getKey(), (V) entry.getValue());
         }
 
     }
@@ -68,7 +68,7 @@ public class InsensitiveStringMap<V> implements Map<String, V> {
         return this.a.entrySet();
     }
 
-    public Object put(Object object, Object object1) {
-        return this.a((String) object, object1);
+    public V put(String object, V object1) {
+        return this.a(object, object1);
     }
 }
diff --git a/src/main/java/net/minecraft/server/IntHashMap.java b/src/main/java/net/minecraft/server/IntHashMap.java
index 2b627013c444c0ad8f98e3f2dbb07ad2d2f93c09..f3dd9b57731ab65561bbbe4833b13d84e961c603 100644
--- a/src/main/java/net/minecraft/server/IntHashMap.java
+++ b/src/main/java/net/minecraft/server/IntHashMap.java
@@ -21,7 +21,7 @@ public class IntHashMap<V> {
     public V get(int i) {
         int j = g(i);
 
-        for (IntHashMap.IntHashMapEntry inthashmap_inthashmapentry = this.a[a(j, this.a.length)]; inthashmap_inthashmapentry != null; inthashmap_inthashmapentry = inthashmap_inthashmapentry.c) {
+        for (IntHashMap.IntHashMapEntry<V> inthashmap_inthashmapentry = this.a[a(j, this.a.length)]; inthashmap_inthashmapentry != null; inthashmap_inthashmapentry = inthashmap_inthashmapentry.c) {
             if (inthashmap_inthashmapentry.a == i) {
                 return inthashmap_inthashmapentry.b;
             }
@@ -101,7 +101,7 @@ public class IntHashMap<V> {
     }
 
     public V d(int i) {
-        IntHashMap.IntHashMapEntry inthashmap_inthashmapentry = this.e(i);
+        IntHashMap.IntHashMapEntry<V> inthashmap_inthashmapentry = this.e(i);
 
         return inthashmap_inthashmapentry == null ? null : inthashmap_inthashmapentry.b;
     }
diff --git a/src/main/java/net/minecraft/server/IpBanList.java b/src/main/java/net/minecraft/server/IpBanList.java
index 617d326f04ee49de6231cead2e2042ae5d844ac8..e91b9648e420257e490ac3721f4caf4014459ccb 100644
--- a/src/main/java/net/minecraft/server/IpBanList.java
+++ b/src/main/java/net/minecraft/server/IpBanList.java
@@ -23,7 +23,7 @@ public class IpBanList extends JsonList<String, IpBanEntry> {
     public IpBanEntry get(SocketAddress socketaddress) {
         String s = this.c(socketaddress);
 
-        return (IpBanEntry) this.get((Object) s);
+        return this.get(s);
     }
 
     private String c(SocketAddress socketaddress) {
diff --git a/src/main/java/net/minecraft/server/ItemStep.java b/src/main/java/net/minecraft/server/ItemStep.java
index 7eedbbd02f13f6796b6a8db2983a9934bc58c48c..4a84372130459a4fb2394a3fd6f57b1b05bf04ce 100644
--- a/src/main/java/net/minecraft/server/ItemStep.java
+++ b/src/main/java/net/minecraft/server/ItemStep.java
@@ -58,7 +58,8 @@ public class ItemStep extends ItemBlock {
             Comparable comparable = iblockdata.get(this.b.n());
 
             if (comparable == object) {
-                IBlockData iblockdata1 = this.c.getBlockData().set(this.b.n(), comparable);
+                IBlockState state = this.b.n();
+                IBlockData iblockdata1 = this.c.getBlockData().set(state, comparable);
 
                 if (world.b(this.c.a(world, blockposition, iblockdata1)) && world.setTypeAndData(blockposition, iblockdata1, 3)) {
                     world.makeSound((double) ((float) blockposition.getX() + 0.5F), (double) ((float) blockposition.getY() + 0.5F), (double) ((float) blockposition.getZ() + 0.5F), this.c.stepSound.getPlaceSound(), (this.c.stepSound.getVolume1() + 1.0F) / 2.0F, this.c.stepSound.getVolume2() * 0.8F);
diff --git a/src/main/java/net/minecraft/server/IteratorUtils.java b/src/main/java/net/minecraft/server/IteratorUtils.java
index 3385f02ed5238b787519a21a05a903235997f930..04d5ec4effaf69366125627802259387867763ae 100644
--- a/src/main/java/net/minecraft/server/IteratorUtils.java
+++ b/src/main/java/net/minecraft/server/IteratorUtils.java
@@ -36,11 +36,11 @@ public class IteratorUtils {
             arraylist.add(object);
         }
 
-        return (Object[]) arraylist.toArray(b(oclass, arraylist.size()));
+        return (T[]) arraylist.toArray(b(oclass, arraylist.size()));
     }
 
     private static <T> T[] b(Class<? super T> oclass, int i) {
-        return (Object[]) ((Object[]) Array.newInstance(oclass, i));
+        return (T[]) Array.newInstance(oclass, i);
     }
 
     static class SyntheticClass_1 {    }
@@ -140,11 +140,11 @@ public class IteratorUtils {
                         ++this.a;
                     }
 
-                    return (Object[]) this.d.clone();
+                    return this.d.clone();
                 }
             }
 
-            public Object next() {
+            public T[] next() {
                 return this.a();
             }
 
@@ -159,11 +159,11 @@ public class IteratorUtils {
         private ArrayToList() {}
 
         public List<T> a(Object[] aobject) {
-            return Arrays.asList((Object[]) aobject);
+            return Arrays.asList((T[]) aobject);
         }
 
-        public Object apply(Object object) {
-            return this.a((Object[]) object);
+        public List<T> apply(Object[] object) {
+            return this.a(object);
         }
 
         ArrayToList(IteratorUtils.SyntheticClass_1 iteratorutils_syntheticclass_1) {
diff --git a/src/main/java/net/minecraft/server/LongHashMap.java b/src/main/java/net/minecraft/server/LongHashMap.java
index 30bb28536c0ac14da764c041d20f313cb9c20482..11f23a56d4d24774549d7276f68eab0ea290e3ef 100644
--- a/src/main/java/net/minecraft/server/LongHashMap.java
+++ b/src/main/java/net/minecraft/server/LongHashMap.java
@@ -33,7 +33,7 @@ public class LongHashMap<V> {
     public V getEntry(long i) {
         int j = g(i);
 
-        for (LongHashMap.LongHashMapEntry longhashmap_longhashmapentry = this.entries[a(j, this.c)]; longhashmap_longhashmapentry != null; longhashmap_longhashmapentry = longhashmap_longhashmapentry.c) {
+        for (LongHashMap.LongHashMapEntry<V> longhashmap_longhashmapentry = this.entries[a(j, this.c)]; longhashmap_longhashmapentry != null; longhashmap_longhashmapentry = longhashmap_longhashmapentry.c) {
             if (longhashmap_longhashmapentry.a == i) {
                 return longhashmap_longhashmapentry.b;
             }
@@ -115,7 +115,7 @@ public class LongHashMap<V> {
     }
 
     public V remove(long i) {
-        LongHashMap.LongHashMapEntry longhashmap_longhashmapentry = this.e(i);
+        LongHashMap.LongHashMapEntry<V> longhashmap_longhashmapentry = this.e(i);
 
         return longhashmap_longhashmapentry == null ? null : longhashmap_longhashmapentry.b;
     }
diff --git a/src/main/java/net/minecraft/server/MapGeneratorUtils.java b/src/main/java/net/minecraft/server/MapGeneratorUtils.java
index 4f5b45a57d2e970966ac744651c2991a8a552ecb..5361446db22a102f3a74604d5a03e5afa8695e13 100644
--- a/src/main/java/net/minecraft/server/MapGeneratorUtils.java
+++ b/src/main/java/net/minecraft/server/MapGeneratorUtils.java
@@ -12,11 +12,11 @@ public class MapGeneratorUtils {
     }
 
     public static <K, V> Map<K, V> a(Iterable<K> iterable, Iterable<V> iterable1, Map<K, V> map) {
-        Iterator iterator = iterable1.iterator();
-        Iterator iterator1 = iterable.iterator();
+        Iterator<V> iterator = iterable1.iterator();
+        Iterator<K> iterator1 = iterable.iterator();
 
         while (iterator1.hasNext()) {
-            Object object = iterator1.next();
+            K object = iterator1.next();
 
             map.put(object, iterator.next());
         }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index b400ce04db4dfefaca9a040902bf2d5e50168b7f..864b3bc1375cb72588b63855eee8fa4ff569a5d3 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -259,7 +259,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
                 }
                 worlddata.checkName(s1); // CraftBukkit - Migration did not rewrite the level.dat; This forces 1.8 to take the last loaded world as respawn (in this case the end)
                 if (this.X()) {
-                    world = (WorldServer) (new DemoWorldServer(this, idatamanager, worlddata, dimension, this.methodProfiler)).b();
+                    world = (WorldServer) (new DemoWorldServer(this, idatamanager, worlddata, dimension, this.methodProfiler, org.bukkit.World.Environment.getEnvironment(dimension), gen)).b();
                 } else {
                     world = (WorldServer) (new WorldServer(this, idatamanager, worlddata, dimension, this.methodProfiler, org.bukkit.World.Environment.getEnvironment(dimension), gen)).b();
                 }
diff --git a/src/main/java/net/minecraft/server/OpList.java b/src/main/java/net/minecraft/server/OpList.java
index a85ad5d4087a127a69157cb69286e9740e2c7e8c..c33b3f6f7be82cb83c1a8b979f70e09a5bdf1bd5 100644
--- a/src/main/java/net/minecraft/server/OpList.java
+++ b/src/main/java/net/minecraft/server/OpList.java
@@ -54,7 +54,7 @@ public class OpList extends JsonList<GameProfile, OpListEntry> {
         return (GameProfile) oplistentry.getKey();
     }
 
-    protected String a(Object object) {
-        return this.c((GameProfile) object);
+    protected String a(GameProfile object) {
+        return this.c(object);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketCompressor.java b/src/main/java/net/minecraft/server/PacketCompressor.java
index 639ae31a91085a6fb96a735d5860fe8b137eaf67..8107890ffbc205f5ce7e22c04d62fb8b16d087c2 100644
--- a/src/main/java/net/minecraft/server/PacketCompressor.java
+++ b/src/main/java/net/minecraft/server/PacketCompressor.java
@@ -46,7 +46,7 @@ public class PacketCompressor extends MessageToByteEncoder<ByteBuf> {
         this.c = i;
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
-        this.a(channelhandlercontext, (ByteBuf) object, bytebuf);
+    protected void encode(ChannelHandlerContext channelhandlercontext, ByteBuf object, ByteBuf bytebuf) throws Exception {
+        this.a(channelhandlercontext, object, bytebuf);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketDecrypter.java b/src/main/java/net/minecraft/server/PacketDecrypter.java
index aca9356119b88b2b3b3d0e2ccf036a29bf876992..4d02db906ec31f627454fde8c5ca9f268b68e933 100644
--- a/src/main/java/net/minecraft/server/PacketDecrypter.java
+++ b/src/main/java/net/minecraft/server/PacketDecrypter.java
@@ -18,7 +18,7 @@ public class PacketDecrypter extends MessageToMessageDecoder<ByteBuf> {
         list.add(this.a.a(channelhandlercontext, bytebuf));
     }
 
-    protected void decode(ChannelHandlerContext channelhandlercontext, Object object, List list) throws Exception {
-        this.a(channelhandlercontext, (ByteBuf) object, list);
+    protected void decode(ChannelHandlerContext channelhandlercontext, ByteBuf object, List list) throws Exception {
+        this.a(channelhandlercontext, object, list);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketEncoder.java b/src/main/java/net/minecraft/server/PacketEncoder.java
index 5c91610430ef2bde06c07daa7b752a3b92c5d3ca..58214e1449e964a009d3fc18983f4d02153ed3c0 100644
--- a/src/main/java/net/minecraft/server/PacketEncoder.java
+++ b/src/main/java/net/minecraft/server/PacketEncoder.java
@@ -46,7 +46,7 @@ public class PacketEncoder extends MessageToByteEncoder<Packet> {
         }
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
-        this.a(channelhandlercontext, (Packet) object, bytebuf);
+    protected void encode(ChannelHandlerContext channelhandlercontext, Packet object, ByteBuf bytebuf) throws Exception {
+        this.a(channelhandlercontext, object, bytebuf);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketEncrypter.java b/src/main/java/net/minecraft/server/PacketEncrypter.java
index bd972ebebe43e82b0eae56882ad21fc4feae84b1..b32a7e67666d372cc9f080b60897f28fb59736fd 100644
--- a/src/main/java/net/minecraft/server/PacketEncrypter.java
+++ b/src/main/java/net/minecraft/server/PacketEncrypter.java
@@ -17,7 +17,7 @@ public class PacketEncrypter extends MessageToByteEncoder<ByteBuf> {
         this.a.a(bytebuf, bytebuf1);
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
+    protected void encode(ChannelHandlerContext channelhandlercontext, ByteBuf object, ByteBuf bytebuf) throws Exception {
         this.a(channelhandlercontext, (ByteBuf) object, bytebuf);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketLoginInStart.java b/src/main/java/net/minecraft/server/PacketLoginInStart.java
index ec0e642acce6bbf1eb0fd37476c72f705785bd90..923676012e8f52a97c1370f987e26b0f2febb251 100644
--- a/src/main/java/net/minecraft/server/PacketLoginInStart.java
+++ b/src/main/java/net/minecraft/server/PacketLoginInStart.java
@@ -29,8 +29,4 @@ public class PacketLoginInStart implements Packet<PacketLoginInListener> {
     public GameProfile a() {
         return this.a;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketLoginInListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketLoginOutDisconnect.java b/src/main/java/net/minecraft/server/PacketLoginOutDisconnect.java
index 09195a993a2d3816952e9b20ee92b71a04817cc4..058941295dfe38d935ac77bd509090113316777b 100644
--- a/src/main/java/net/minecraft/server/PacketLoginOutDisconnect.java
+++ b/src/main/java/net/minecraft/server/PacketLoginOutDisconnect.java
@@ -23,8 +23,4 @@ public class PacketLoginOutDisconnect implements Packet<PacketLoginOutListener>
     public void a(PacketLoginOutListener packetloginoutlistener) {
         packetloginoutlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketLoginOutListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketLoginOutEncryptionBegin.java b/src/main/java/net/minecraft/server/PacketLoginOutEncryptionBegin.java
index 703fca1f37d55f393f8913ac643a27a01bc5f761..6867c1fb150f3a84bac400b52c18e2de37ae5ec3 100644
--- a/src/main/java/net/minecraft/server/PacketLoginOutEncryptionBegin.java
+++ b/src/main/java/net/minecraft/server/PacketLoginOutEncryptionBegin.java
@@ -32,8 +32,4 @@ public class PacketLoginOutEncryptionBegin implements Packet<PacketLoginOutListe
     public void a(PacketLoginOutListener packetloginoutlistener) {
         packetloginoutlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketLoginOutListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketLoginOutSetCompression.java b/src/main/java/net/minecraft/server/PacketLoginOutSetCompression.java
index 1b2289394903e583abbc084d1035f0bad1fd32d6..cde95f444d9ddb48edc363b9e26a395915780fc4 100644
--- a/src/main/java/net/minecraft/server/PacketLoginOutSetCompression.java
+++ b/src/main/java/net/minecraft/server/PacketLoginOutSetCompression.java
@@ -23,8 +23,4 @@ public class PacketLoginOutSetCompression implements Packet<PacketLoginOutListen
     public void a(PacketLoginOutListener packetloginoutlistener) {
         packetloginoutlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketLoginOutListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketLoginOutSuccess.java b/src/main/java/net/minecraft/server/PacketLoginOutSuccess.java
index 7bd71e39d928e789bdd1fc5588bb9e6b988c78d3..c811dd61637dfb5457edaea8199c1d1aecfeb5c8 100644
--- a/src/main/java/net/minecraft/server/PacketLoginOutSuccess.java
+++ b/src/main/java/net/minecraft/server/PacketLoginOutSuccess.java
@@ -32,8 +32,4 @@ public class PacketLoginOutSuccess implements Packet<PacketLoginOutListener> {
     public void a(PacketLoginOutListener packetloginoutlistener) {
         packetloginoutlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketLoginOutListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInAbilities.java b/src/main/java/net/minecraft/server/PacketPlayInAbilities.java
index 62ee793170d3bf85ec39e00fbfd37420a99d09d9..aac5a0cb435dc4650faeeb54b20b03df5c1b1955 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInAbilities.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInAbilities.java
@@ -100,8 +100,4 @@ public class PacketPlayInAbilities implements Packet<PacketListenerPlayIn> {
     public void b(float f) {
         this.f = f;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInBlockDig.java b/src/main/java/net/minecraft/server/PacketPlayInBlockDig.java
index f56dd17064f3c09e3135e727da6056d2e79ffc6f..5b5e7a7cac6b428c2afb6c7647ff8e358f364935 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInBlockDig.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInBlockDig.java
@@ -38,10 +38,6 @@ public class PacketPlayInBlockDig implements Packet<PacketListenerPlayIn> {
         return this.c;
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
-
     public static enum EnumPlayerDigType {
 
         START_DESTROY_BLOCK, ABORT_DESTROY_BLOCK, STOP_DESTROY_BLOCK, DROP_ALL_ITEMS, DROP_ITEM, RELEASE_USE_ITEM;
diff --git a/src/main/java/net/minecraft/server/PacketPlayInClientCommand.java b/src/main/java/net/minecraft/server/PacketPlayInClientCommand.java
index 530db616083c56d1978c1a18a11fbf8c2ea9c5e5..eea677c29f26bd4c7dd19a527dffdf80cca001b1 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInClientCommand.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInClientCommand.java
@@ -28,10 +28,6 @@ public class PacketPlayInClientCommand implements Packet<PacketListenerPlayIn> {
         return this.a;
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
-
     public static enum EnumClientCommand {
 
         PERFORM_RESPAWN, REQUEST_STATS, OPEN_INVENTORY_ACHIEVEMENT;
diff --git a/src/main/java/net/minecraft/server/PacketPlayInCustomPayload.java b/src/main/java/net/minecraft/server/PacketPlayInCustomPayload.java
index 24c6f3f704e6f7c8dcc32a97a3fa713bfddee83b..d5d932c082d32c0660e9f30ed4fa13f3ef77d4b5 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInCustomPayload.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInCustomPayload.java
@@ -37,8 +37,4 @@ public class PacketPlayInCustomPayload implements Packet<PacketListenerPlayIn> {
     public PacketDataSerializer b() {
         return this.b;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java b/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java
index eb67ee307e42c40040827e2639b4bbf165623663..4aa39e52a6a054590e0565ef40baed815d891e05 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java
@@ -30,8 +30,4 @@ public class PacketPlayInEnchantItem implements Packet<PacketListenerPlayIn> {
     public int b() {
         return this.b;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java b/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java
index 71b3caa5a16d66331beca7f4a56bae84f3658bee..d98ef823d60c754955a0cc9ed7569bf125178bdb 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java
@@ -34,10 +34,6 @@ public class PacketPlayInEntityAction implements Packet<PacketListenerPlayIn> {
         return this.c;
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
-
     public static enum EnumPlayerAction {
 
         START_SNEAKING, STOP_SNEAKING, STOP_SLEEPING, START_SPRINTING, STOP_SPRINTING, RIDING_JUMP, OPEN_INVENTORY;
diff --git a/src/main/java/net/minecraft/server/PacketPlayInFlying.java b/src/main/java/net/minecraft/server/PacketPlayInFlying.java
index 4252b700a2dd8a4e8ec9de7a686a88fcc279dbed..91b7dedc1652ec4a3b453270be031845c1151f83 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInFlying.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInFlying.java
@@ -63,10 +63,6 @@ public class PacketPlayInFlying implements Packet<PacketListenerPlayIn> {
         this.hasPos = flag;
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
-
     public static class PacketPlayInLook extends PacketPlayInFlying {
 
         public PacketPlayInLook() {
@@ -84,10 +80,6 @@ public class PacketPlayInFlying implements Packet<PacketListenerPlayIn> {
             packetdataserializer.writeFloat(this.pitch);
             super.b(packetdataserializer);
         }
-
-        public void a(PacketListener packetlistener) {
-            super.a((PacketListenerPlayIn) packetlistener);
-        }
     }
 
     public static class PacketPlayInPosition extends PacketPlayInFlying {
@@ -109,10 +101,6 @@ public class PacketPlayInFlying implements Packet<PacketListenerPlayIn> {
             packetdataserializer.writeDouble(this.z);
             super.b(packetdataserializer);
         }
-
-        public void a(PacketListener packetlistener) {
-            super.a((PacketListenerPlayIn) packetlistener);
-        }
     }
 
     public static class PacketPlayInPositionLook extends PacketPlayInFlying {
@@ -139,9 +127,5 @@ public class PacketPlayInFlying implements Packet<PacketListenerPlayIn> {
             packetdataserializer.writeFloat(this.pitch);
             super.b(packetdataserializer);
         }
-
-        public void a(PacketListener packetlistener) {
-            super.a((PacketListenerPlayIn) packetlistener);
-        }
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java b/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java
index 76cefbf1beddf54a446550f90dca024b1276b40b..7f93d772033b2fd2dcc8f465a21e12fc9524256a 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java
@@ -23,8 +23,4 @@ public class PacketPlayInHeldItemSlot implements Packet<PacketListenerPlayIn> {
     public int a() {
         return this.itemInHandIndex;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java b/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java
index b017c560e57d095c080a8217ea183a6278d820bd..fe5a6cf8639024ee6d5d794fd2757ba9b0795c69 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java
@@ -23,8 +23,4 @@ public class PacketPlayInKeepAlive implements Packet<PacketListenerPlayIn> {
     public int a() {
         return this.a;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java b/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java
index 5e171d8bec520b65ada6b3466e894f985e7b056b..e176c9ca04e090a859feb0fe7019380c35b1dc1c 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java
@@ -30,8 +30,4 @@ public class PacketPlayInSetCreativeSlot implements Packet<PacketListenerPlayIn>
     public ItemStack getItemStack() {
         return this.b;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSettings.java b/src/main/java/net/minecraft/server/PacketPlayInSettings.java
index 6e5fb18fa94735c3526d2f66432832e2b3b4c96c..6bf4c3dca6ea2ad7c6702b45a4e453fef9c93475 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSettings.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSettings.java
@@ -47,8 +47,4 @@ public class PacketPlayInSettings implements Packet<PacketListenerPlayIn> {
     public int e() {
         return this.e;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSpectate.java b/src/main/java/net/minecraft/server/PacketPlayInSpectate.java
index 2c41a1e02a219a1a3d4fee24e7379550c25a72b6..56a4208b5a1ef8675ef72d4405b9362a6a96b689 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSpectate.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSpectate.java
@@ -28,8 +28,4 @@ public class PacketPlayInSpectate implements Packet<PacketListenerPlayIn> {
     public Entity a(WorldServer worldserver) {
         return worldserver.getEntity(this.a);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSteerVehicle.java b/src/main/java/net/minecraft/server/PacketPlayInSteerVehicle.java
index d346d1f207c8178c0fe42d87efef2ce369dc8b3b..638e43caf195e57d97a21efcdc9f6fe39b570b43 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSteerVehicle.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSteerVehicle.java
@@ -55,8 +55,4 @@ public class PacketPlayInSteerVehicle implements Packet<PacketListenerPlayIn> {
     public boolean d() {
         return this.d;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInTabComplete.java b/src/main/java/net/minecraft/server/PacketPlayInTabComplete.java
index 237f66557c8987e421c982c5b09b109fb7101d7e..0d811e789c3ef7dd6ce5837a75dcbcf6ebcbd127 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInTabComplete.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInTabComplete.java
@@ -51,8 +51,4 @@ public class PacketPlayInTabComplete implements Packet<PacketListenerPlayIn> {
     public BlockPosition b() {
         return this.b;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInTransaction.java b/src/main/java/net/minecraft/server/PacketPlayInTransaction.java
index 8fa1d19856718f2f44fcb9c445fc961c65234989..2d3c885a9387122615d38d94b0254658af35217e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInTransaction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInTransaction.java
@@ -33,8 +33,4 @@ public class PacketPlayInTransaction implements Packet<PacketListenerPlayIn> {
     public short b() {
         return this.b;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInUpdateSign.java b/src/main/java/net/minecraft/server/PacketPlayInUpdateSign.java
index 331e6000f9a51fda85dd5dcf918d777eac6ce878..703e47c52ad9c49d0cc9b026f2616bd27f711704 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInUpdateSign.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInUpdateSign.java
@@ -45,8 +45,4 @@ public class PacketPlayInUpdateSign implements Packet<PacketListenerPlayIn> {
     public IChatBaseComponent[] b() {
         return this.b;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
index f55bedaff3a14975481eccf8bb7618d0a98922bb..a8fc3361a16c693e62d897bd079d1780d85729fb 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
@@ -46,10 +46,6 @@ public class PacketPlayInUseEntity implements Packet<PacketListenerPlayIn> {
         return this.c;
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
-
     public static enum EnumEntityUseAction {
 
         INTERACT, ATTACK, INTERACT_AT;
diff --git a/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java b/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java
index 9b780572fc5f9671bd1b937f6da7267e5677e792..a9a2a794d336683a70c7d2c7c0a8a21373f41d7e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java
@@ -58,8 +58,4 @@ public class PacketPlayInWindowClick implements Packet<PacketListenerPlayIn> {
     public int f() {
         return this.shift;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayIn) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutAbilities.java b/src/main/java/net/minecraft/server/PacketPlayOutAbilities.java
index 4eab9595ba698ce8b847d2fe82171e928bacff76..5fb9e7e39f6f66e47ed31446d0bdaa6274e71648 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutAbilities.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutAbilities.java
@@ -100,8 +100,4 @@ public class PacketPlayOutAbilities implements Packet<PacketListenerPlayOut> {
     public void b(float f) {
         this.f = f;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java b/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java
index 39a058770d598fccc80a78e72249da150847f7e5..df444920050fd3062f151495cfcf361e9cb18c34 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java
@@ -27,8 +27,4 @@ public class PacketPlayOutAnimation implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java
index bf6f6643ec6db1779469819028f8c66ae5f671a6..a4dd6ea0be7f992770b934423a07d2ef6507adb3 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java
@@ -31,8 +31,4 @@ public class PacketPlayOutAttachEntity implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutBed.java b/src/main/java/net/minecraft/server/PacketPlayOutBed.java
index fd44293a85ccfcd6398be5b521e8178759268891..cc21d8086ef3c503a8e330be715d8d86242a6177 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutBed.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutBed.java
@@ -27,8 +27,4 @@ public class PacketPlayOutBed implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java b/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java
index 55855675c6ca42b4de877e09637f076668af26da..c4692088f5981ddcf2d16d819e93e9d19ce65347 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java
@@ -35,8 +35,4 @@ public class PacketPlayOutBlockAction implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutBlockBreakAnimation.java b/src/main/java/net/minecraft/server/PacketPlayOutBlockBreakAnimation.java
index 3d52199b69df9ea3f57b771d78f63a173071ddc0..678e5908336191c265d7333e5362ff25969e2abc 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutBlockBreakAnimation.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutBlockBreakAnimation.java
@@ -31,8 +31,4 @@ public class PacketPlayOutBlockBreakAnimation implements Packet<PacketListenerPl
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutBlockChange.java b/src/main/java/net/minecraft/server/PacketPlayOutBlockChange.java
index 52a39a61a06ae64c18f111154dace15483e91bcf..00d7d300001a047e7137d9c64dc11af77f5e84ec 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutBlockChange.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutBlockChange.java
@@ -27,8 +27,4 @@ public class PacketPlayOutBlockChange implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutCamera.java b/src/main/java/net/minecraft/server/PacketPlayOutCamera.java
index e0622812e5935ce9f5e6b18ab391c13e94b8041a..80d4d6d3d56d02a6ef166f1fb561490cc54ad43f 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutCamera.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutCamera.java
@@ -23,8 +23,4 @@ public class PacketPlayOutCamera implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutCloseWindow.java b/src/main/java/net/minecraft/server/PacketPlayOutCloseWindow.java
index e6e8facd34dff3a4c21fec13654c2bd1e25571a9..cde2639ab7be0018dfe17bd0d7a8c3c3f146b92c 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutCloseWindow.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutCloseWindow.java
@@ -23,8 +23,4 @@ public class PacketPlayOutCloseWindow implements Packet<PacketListenerPlayOut> {
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.writeByte(this.a);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutCollect.java b/src/main/java/net/minecraft/server/PacketPlayOutCollect.java
index 95ba856288a67068d07ff1982e4fe0145cd3fb2c..8063f48ad79acec0333379f300ec40a5bd52b50f 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutCollect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutCollect.java
@@ -27,8 +27,4 @@ public class PacketPlayOutCollect implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutCombatEvent.java b/src/main/java/net/minecraft/server/PacketPlayOutCombatEvent.java
index ca74f2d5e11c13c2e55d6c94f483ed1f9d2e2868..a540ac3dc9422b72177b78bde1cbbc5dbce094fa 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutCombatEvent.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutCombatEvent.java
@@ -60,10 +60,6 @@ public class PacketPlayOutCombatEvent implements Packet<PacketListenerPlayOut> {
         packetlistenerplayout.a(this);
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     static class SyntheticClass_1 {
 
         static final int[] a = new int[PacketPlayOutCombatEvent.EnumCombatEventType.values().length];
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutCustomPayload.java b/src/main/java/net/minecraft/server/PacketPlayOutCustomPayload.java
index e736c16b949e914b7ded3593f9ebc7c124a16c0a..35b2a8603e55bd2e437c7e3dc6079ac3f796913e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutCustomPayload.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutCustomPayload.java
@@ -37,8 +37,4 @@ public class PacketPlayOutCustomPayload implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
index 42b54396f58585299fc2f96c4cb69f38767e72cb..6d0a90dd1e95e6051f49a78c988e5cccbebf4f35 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
@@ -35,10 +35,6 @@ public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
         return "Entity_" + super.toString();
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     public static class PacketPlayOutEntityLook extends PacketPlayOutEntity {
 
         public PacketPlayOutEntityLook() {
@@ -66,10 +62,6 @@ public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
             packetdataserializer.writeByte(this.f);
             packetdataserializer.writeBoolean(this.g);
         }
-
-        public void a(PacketListener packetlistener) {
-            super.a((PacketListenerPlayOut) packetlistener);
-        }
     }
 
     public static class PacketPlayOutRelEntityMove extends PacketPlayOutEntity {
@@ -99,10 +91,6 @@ public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
             packetdataserializer.writeByte(this.d);
             packetdataserializer.writeBoolean(this.g);
         }
-
-        public void a(PacketListener packetlistener) {
-            super.a((PacketListenerPlayOut) packetlistener);
-        }
     }
 
     public static class PacketPlayOutRelEntityMoveLook extends PacketPlayOutEntity {
@@ -141,9 +129,5 @@ public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
             packetdataserializer.writeByte(this.f);
             packetdataserializer.writeBoolean(this.g);
         }
-
-        public void a(PacketListener packetlistener) {
-            super.a((PacketListenerPlayOut) packetlistener);
-        }
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java
index 9c58311db03bd773d5294a64a3c0d1c380775fb9..f37a855d21ec986a174b6dbad92eae570ed34d15 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java
@@ -33,8 +33,4 @@ public class PacketPlayOutEntityDestroy implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityEffect.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityEffect.java
index 5c3e8433499be691d1d0ee80d59b80eff26a1020..74d1bdaba245be402dc5752c8c7f55f86ed5d7f3 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityEffect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityEffect.java
@@ -44,8 +44,4 @@ public class PacketPlayOutEntityEffect implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityEquipment.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityEquipment.java
index 8336a08da1c8a949e0dc7eda322a909cefefb3b3..b6124aa1771b2991ade161e464bce0ac37783435 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityEquipment.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityEquipment.java
@@ -31,8 +31,4 @@ public class PacketPlayOutEntityEquipment implements Packet<PacketListenerPlayOu
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java
index 50acff6420f54d02542666fae95cfcce8709add5..b8daa72ab9289d16c5dd76dea390bf9f1045f15b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java
@@ -27,8 +27,4 @@ public class PacketPlayOutEntityHeadRotation implements Packet<PacketListenerPla
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
index c5be70f8b7863a6bcfcd45871f5d1d83f0f376f3..62492650a0e8d480da1b3920b7fe61ed5119749d 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
@@ -33,8 +33,4 @@ public class PacketPlayOutEntityMetadata implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java
index 251dfb11e2ddc5db98b0847895db7b1ea7394e38..77ac1c7fa2c927428530159977682d60f561488d 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java
@@ -27,8 +27,4 @@ public class PacketPlayOutEntityStatus implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
index fe3002dab32b67700e0da2965a75ee946a6ce33c..ec9a077b45ac70f358675511d96a739d3ec71b42 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
@@ -57,8 +57,4 @@ public class PacketPlayOutEntityTeleport implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java
index e7df1db5dcee70797d29e3e99a55e3f01c9c6c18..d8c07330f78c5f716001d6286c7a1c492d152db9 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java
@@ -65,8 +65,4 @@ public class PacketPlayOutEntityVelocity implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutExperience.java b/src/main/java/net/minecraft/server/PacketPlayOutExperience.java
index 1ba15e344b6554f22e969820b5965c4eab522080..2e78c10d37deeeb3b089a2bd3432548f5e0100d6 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutExperience.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutExperience.java
@@ -31,8 +31,4 @@ public class PacketPlayOutExperience implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutExplosion.java b/src/main/java/net/minecraft/server/PacketPlayOutExplosion.java
index 0db929d28848cabfefa2870433cb05f5a628100b..98ee289d7cfdcde1e35384f30b13fb12103c2d4e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutExplosion.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutExplosion.java
@@ -87,8 +87,4 @@ public class PacketPlayOutExplosion implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutGameStateChange.java b/src/main/java/net/minecraft/server/PacketPlayOutGameStateChange.java
index 8f1add2effaeaece70a640b491472c8eec66b66f..9313581f1cbf08ad4a40625c5495214a8d78bc6c 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutGameStateChange.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutGameStateChange.java
@@ -28,8 +28,4 @@ public class PacketPlayOutGameStateChange implements Packet<PacketListenerPlayOu
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutHeldItemSlot.java b/src/main/java/net/minecraft/server/PacketPlayOutHeldItemSlot.java
index 688380f6a8609f5a382833413611ac9f6b0cb3c1..1f72b276efc28ccdeabea40387cdabffe091dece 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutHeldItemSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutHeldItemSlot.java
@@ -23,8 +23,4 @@ public class PacketPlayOutHeldItemSlot implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutKeepAlive.java b/src/main/java/net/minecraft/server/PacketPlayOutKeepAlive.java
index 51711a4ebd75ce6e2227ef8218efbc76a1df3418..06af093f1bb0a75742431a6c4b58da3533d1d193 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutKeepAlive.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutKeepAlive.java
@@ -23,8 +23,4 @@ public class PacketPlayOutKeepAlive implements Packet<PacketListenerPlayOut> {
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.b(this.a);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutKickDisconnect.java b/src/main/java/net/minecraft/server/PacketPlayOutKickDisconnect.java
index 844050bef60ab9c03405cdc5d202edbb57e32a9b..44d6f2de484ddc83d8625d3f4bacd06def13c7b1 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutKickDisconnect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutKickDisconnect.java
@@ -23,8 +23,4 @@ public class PacketPlayOutKickDisconnect implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutLogin.java b/src/main/java/net/minecraft/server/PacketPlayOutLogin.java
index f9d76c8c565bfaa0e43c2961caa737153cc92711..1edea6534f0e090bad1488074041c133b030e810 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutLogin.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutLogin.java
@@ -64,8 +64,4 @@ public class PacketPlayOutLogin implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutMap.java b/src/main/java/net/minecraft/server/PacketPlayOutMap.java
index e7c11e1d7b9ae0fd80ae435f7cc06d7a463e7ab5..57a6ed9b398a674c9592c0a8f3efe029e8c59bed 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutMap.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutMap.java
@@ -83,8 +83,4 @@ public class PacketPlayOutMap implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java b/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java
index ed4b7a698fb95dd29ef48fadfc5eab541b266a1e..40a60fe05bc2f24b56e2554720e1c2efab51d145 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java
@@ -49,10 +49,6 @@ public class PacketPlayOutMultiBlockChange implements Packet<PacketListenerPlayO
         packetlistenerplayout.a(this);
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     public class MultiBlockChangeInfo {
 
         private final short b;
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
index 953d6ef53ec508b403d78e10e15ba6caaf2a9f5f..17c304e5ececa34f3cd15512fb8ee87a1fdb993e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
@@ -60,8 +60,4 @@ public class PacketPlayOutNamedEntitySpawn implements Packet<PacketListenerPlayO
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
index 8f462209d1abffa9c44c5007608a6ab084e57223..369b6a17c7073ba438bb8ad74eeee9e56e666ea5 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
@@ -46,8 +46,4 @@ public class PacketPlayOutNamedSoundEffect implements Packet<PacketListenerPlayO
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutOpenSignEditor.java b/src/main/java/net/minecraft/server/PacketPlayOutOpenSignEditor.java
index 22c1f0ae95ecc4249e3b093071407f391400ff63..aa1a9c0f0153942e035074842f05e6cea1396050 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutOpenSignEditor.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutOpenSignEditor.java
@@ -23,8 +23,4 @@ public class PacketPlayOutOpenSignEditor implements Packet<PacketListenerPlayOut
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.a(this.a);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
index ab4520ba2a7a50634ac7181e1129f96e45229883..fc5ad2911fda8a8270a3d3ceddd70c5f2fbbd79b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -172,10 +172,6 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
         return Objects.toStringHelper(this).add("action", this.a).add("entries", this.b).toString();
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     static class SyntheticClass_1 {
 
         static final int[] a = new int[PacketPlayOutPlayerInfo.EnumPlayerInfoAction.values().length];
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPosition.java b/src/main/java/net/minecraft/server/PacketPlayOutPosition.java
index e612df34e1f601f57aae2048fe276b243c0aa975..ce0d872dee189df6954e6bfd540cec4ec7ec846a 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPosition.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPosition.java
@@ -47,10 +47,6 @@ public class PacketPlayOutPosition implements Packet<PacketListenerPlayOut> {
         packetlistenerplayout.a(this);
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     public static enum EnumPlayerTeleportFlags {
 
         X(0), Y(1), Z(2), Y_ROT(3), X_ROT(4);
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutRemoveEntityEffect.java b/src/main/java/net/minecraft/server/PacketPlayOutRemoveEntityEffect.java
index 3d961ead0c0214e9c48f77b31617f27eaf3c64dc..a435b758a86b4711e871eeb9fe1133112b256de6 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutRemoveEntityEffect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutRemoveEntityEffect.java
@@ -27,8 +27,4 @@ public class PacketPlayOutRemoveEntityEffect implements Packet<PacketListenerPla
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutResourcePackSend.java b/src/main/java/net/minecraft/server/PacketPlayOutResourcePackSend.java
index 3b8ec2f156b98561ab150d696592f1a7838dbf51..5b464f18aa34d496dad8e7ba7327edbd695a488e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutResourcePackSend.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutResourcePackSend.java
@@ -30,8 +30,4 @@ public class PacketPlayOutResourcePackSend implements Packet<PacketListenerPlayO
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutRespawn.java b/src/main/java/net/minecraft/server/PacketPlayOutRespawn.java
index 52b43a7824421fa0169d00e8812b3ee5e1ca6e9a..889119824716064bac55691273a9d6ee2a39f78e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutRespawn.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutRespawn.java
@@ -39,8 +39,4 @@ public class PacketPlayOutRespawn implements Packet<PacketListenerPlayOut> {
         packetdataserializer.writeByte(this.c.getId());
         packetdataserializer.a(this.d.name());
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardDisplayObjective.java b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardDisplayObjective.java
index 5b4a6b70a85db65fbc17d9e09a9ada939b36598e..78420156de93a2ea53bde6b4c1abb1f6761519fe 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardDisplayObjective.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardDisplayObjective.java
@@ -32,8 +32,4 @@ public class PacketPlayOutScoreboardDisplayObjective implements Packet<PacketLis
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardObjective.java b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardObjective.java
index c552fd712d92a5c5b98282a5fe17463e215f2b89..fc1dcaf3c7cce6d316da15c0610e811f61243562 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardObjective.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardObjective.java
@@ -41,8 +41,4 @@ public class PacketPlayOutScoreboardObjective implements Packet<PacketListenerPl
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardScore.java b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardScore.java
index c5064c49493c53a184eb7f1bcc3acc6340859f95..73227da4412365f1efd925681c13bc407dadbf57 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardScore.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardScore.java
@@ -56,10 +56,6 @@ public class PacketPlayOutScoreboardScore implements Packet<PacketListenerPlayOu
         packetlistenerplayout.a(this);
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     public static enum EnumScoreboardAction {
 
         CHANGE, REMOVE;
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardTeam.java b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardTeam.java
index 90606f50b79de8566cc585a840231fcf1b5954d5..4b8eb3eed2f1ec4a7c49d113e6baecc6613d1235 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutScoreboardTeam.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutScoreboardTeam.java
@@ -109,8 +109,4 @@ public class PacketPlayOutScoreboardTeam implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutServerDifficulty.java b/src/main/java/net/minecraft/server/PacketPlayOutServerDifficulty.java
index 74d94607ec361f14eeaec106d2326ef3fdc08190..146246506c2cb53c177f1b25387f11178ad80166 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutServerDifficulty.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutServerDifficulty.java
@@ -25,8 +25,4 @@ public class PacketPlayOutServerDifficulty implements Packet<PacketListenerPlayO
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
         packetdataserializer.writeByte(this.a.a());
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSetCompression.java b/src/main/java/net/minecraft/server/PacketPlayOutSetCompression.java
index 1431901ce1e68f0de4a41f54848d15458f0fcabe..d8e8e2dec0c70692caae349cb593b25871ea020a 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSetCompression.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSetCompression.java
@@ -19,8 +19,4 @@ public class PacketPlayOutSetCompression implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java b/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java
index dd6610cbe506d089d5a4bd611f7813b7ea7c8396..e86e1f53ca39e5788fac5d7885990dbad1d102fe 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java
@@ -31,8 +31,4 @@ public class PacketPlayOutSetSlot implements Packet<PacketListenerPlayOut> {
         packetdataserializer.writeShort(this.b);
         packetdataserializer.a(this.c);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
index 69dd590a407a70b6bc7be6d9295e90d3e3bc4c1e..a4626ccbdcd59c0c7e6b8893a904780eeac124c8 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
@@ -129,8 +129,4 @@ public class PacketPlayOutSpawnEntity implements Packet<PacketListenerPlayOut> {
     public void f(int i) {
         this.g = i;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java
index 4814d6bae6a774fc313a2e1b783b2cec5612b3ef..3be5f77b2f3c849524c061ea3dc5ac3fa6d887bd 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java
@@ -39,8 +39,4 @@ public class PacketPlayOutSpawnEntityExperienceOrb implements Packet<PacketListe
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
index 1541921ce2c6c2bd676f30f9d1e9eeb95d13b72b..89499eaddb59d245a13094a74f8646142922d25f 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
@@ -98,8 +98,4 @@ public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlay
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityPainting.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityPainting.java
index 42006a97d0b1c15dcc3b929c4b8836fedb135e35..2ebd80b80487eb873ecca7b3531fc2c3bcf0915e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityPainting.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityPainting.java
@@ -35,8 +35,4 @@ public class PacketPlayOutSpawnEntityPainting implements Packet<PacketListenerPl
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityWeather.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityWeather.java
index 62afc64e61b19c756da5b87380345de20aa54274..058459b88bd76cea86bac387ad9064f70ee84715 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityWeather.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityWeather.java
@@ -42,8 +42,4 @@ public class PacketPlayOutSpawnEntityWeather implements Packet<PacketListenerPla
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnPosition.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnPosition.java
index bb726a9ac6b0ef87571e87a6f3731bc0ef473fce..29a8b49897419bb7011cde89fb003eb40632736d 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnPosition.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnPosition.java
@@ -23,8 +23,4 @@ public class PacketPlayOutSpawnPosition implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutStatistic.java b/src/main/java/net/minecraft/server/PacketPlayOutStatistic.java
index d549210194e7d4bd895f373277d5b4a25e62639b..d10e94be4b8f39a4713719f8ee81df5505dbd648 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutStatistic.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutStatistic.java
@@ -48,8 +48,4 @@ public class PacketPlayOutStatistic implements Packet<PacketListenerPlayOut> {
         }
 
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutTabComplete.java b/src/main/java/net/minecraft/server/PacketPlayOutTabComplete.java
index 675961ef9f9632e52fa2ff69a315d0d878175038..cad5566370d95d577580c4adf8f37b649d70a3af 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutTabComplete.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutTabComplete.java
@@ -37,8 +37,4 @@ public class PacketPlayOutTabComplete implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java b/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java
index 605438d2d0297192fcb63335de95f9028e716e91..da8d9fd41b5682783ce8380b24d9186ce034df22 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java
@@ -31,8 +31,4 @@ public class PacketPlayOutTileEntityData implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutTransaction.java b/src/main/java/net/minecraft/server/PacketPlayOutTransaction.java
index ed9e46370cc2debadd24efc9368df060da91d729..ad10a9fbe20061027403eeeecf8f7d1720e3870c 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutTransaction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutTransaction.java
@@ -31,8 +31,4 @@ public class PacketPlayOutTransaction implements Packet<PacketListenerPlayOut> {
         packetdataserializer.writeShort(this.b);
         packetdataserializer.writeBoolean(this.c);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutUpdateAttributes.java b/src/main/java/net/minecraft/server/PacketPlayOutUpdateAttributes.java
index 627b8fc67be17c7c5ee0926e30de2b31df003cd0..acd1ea0b86387f18e6d911fa3ba7f0ddc9684409 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutUpdateAttributes.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutUpdateAttributes.java
@@ -76,10 +76,6 @@ public class PacketPlayOutUpdateAttributes implements Packet<PacketListenerPlayO
         packetlistenerplayout.a(this);
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     public class AttributeSnapshot {
 
         private final String b;
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutUpdateEntityNBT.java b/src/main/java/net/minecraft/server/PacketPlayOutUpdateEntityNBT.java
index 4273e36ff7ae9cd38947e44a71a6942b7d602e5a..2880a045fdb9fa68a2b14e5da4c935cfa6bbda42 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutUpdateEntityNBT.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutUpdateEntityNBT.java
@@ -27,8 +27,4 @@ public class PacketPlayOutUpdateEntityNBT implements Packet<PacketListenerPlayOu
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutUpdateHealth.java b/src/main/java/net/minecraft/server/PacketPlayOutUpdateHealth.java
index 1f2bce1f59566d80d42b66f1624d0177367eb03a..0375da8d4201b9e05d79ea9f5eee848699ff145b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutUpdateHealth.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutUpdateHealth.java
@@ -31,8 +31,4 @@ public class PacketPlayOutUpdateHealth implements Packet<PacketListenerPlayOut>
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutUpdateSign.java b/src/main/java/net/minecraft/server/PacketPlayOutUpdateSign.java
index 50e9686dd3b2e352d0885cf7bc8abb7cf5dd2b2f..56291c13e6bc1fbb25a3ceb4e60b1a9d522aa530 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutUpdateSign.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutUpdateSign.java
@@ -38,8 +38,4 @@ public class PacketPlayOutUpdateSign implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutUpdateTime.java b/src/main/java/net/minecraft/server/PacketPlayOutUpdateTime.java
index 38fec4aee2b6afa80ba4349ad26e21e564f0aaad..c5c3f40ce09cd3168cf8e5f80f14e6b82d7603c4 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutUpdateTime.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutUpdateTime.java
@@ -34,8 +34,4 @@ public class PacketPlayOutUpdateTime implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutWindowData.java b/src/main/java/net/minecraft/server/PacketPlayOutWindowData.java
index 18b89c603b28dd9daa8f37eed63f9122de21b773..ee5add6faca4ef415986208fa1b6690cd4a53968 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutWindowData.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutWindowData.java
@@ -31,8 +31,4 @@ public class PacketPlayOutWindowData implements Packet<PacketListenerPlayOut> {
         packetdataserializer.writeShort(this.b);
         packetdataserializer.writeShort(this.c);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutWindowItems.java b/src/main/java/net/minecraft/server/PacketPlayOutWindowItems.java
index 22472c093b30e844f2497e998ff61b0015dfba47..dcf7245b51263128f84e5f0fb34c82da1c735c73 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutWindowItems.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutWindowItems.java
@@ -51,8 +51,4 @@ public class PacketPlayOutWindowItems implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutWorldBorder.java b/src/main/java/net/minecraft/server/PacketPlayOutWorldBorder.java
index 53b0302b7a616479dbcfaea014457f8bce1c02fa..b4d40afe515142e11336e6b11fb76df2e629d729 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutWorldBorder.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutWorldBorder.java
@@ -110,10 +110,6 @@ public class PacketPlayOutWorldBorder implements Packet<PacketListenerPlayOut> {
         packetlistenerplayout.a(this);
     }
 
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
-
     static class SyntheticClass_1 {
 
         static final int[] a = new int[PacketPlayOutWorldBorder.EnumWorldBorderAction.values().length];
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutWorldEvent.java b/src/main/java/net/minecraft/server/PacketPlayOutWorldEvent.java
index 167bb6b994ad5a8719c40c91a3407170e05a9ff7..0592729c97fb9f6d748e78838f1784b687e2fb4b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutWorldEvent.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutWorldEvent.java
@@ -35,8 +35,4 @@ public class PacketPlayOutWorldEvent implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutWorldParticles.java b/src/main/java/net/minecraft/server/PacketPlayOutWorldParticles.java
index db8af7daaef07fdb34705ef274178150861f60ea..74571c542a269b3d6d3cdf5cb2b85707175ac60f 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutWorldParticles.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutWorldParticles.java
@@ -79,8 +79,4 @@ public class PacketPlayOutWorldParticles implements Packet<PacketListenerPlayOut
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketListenerPlayOut) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPrepender.java b/src/main/java/net/minecraft/server/PacketPrepender.java
index e09ede5bfff8c71b82fdcbeb50e84ec7d617f3f1..29d28a45224afbf7f5641a98fee1ae7a416ed6e1 100644
--- a/src/main/java/net/minecraft/server/PacketPrepender.java
+++ b/src/main/java/net/minecraft/server/PacketPrepender.java
@@ -23,7 +23,7 @@ public class PacketPrepender extends MessageToByteEncoder<ByteBuf> {
         }
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
+    protected void encode(ChannelHandlerContext channelhandlercontext, ByteBuf object, ByteBuf bytebuf) throws Exception {
         this.a(channelhandlercontext, (ByteBuf) object, bytebuf);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketStatusInPing.java b/src/main/java/net/minecraft/server/PacketStatusInPing.java
index 97e5f50aeb5a7ffd2437c13b5ce4e3eb4e30b77a..1a5e7a6206f7ceb193ac3704432e02a1dbd57298 100644
--- a/src/main/java/net/minecraft/server/PacketStatusInPing.java
+++ b/src/main/java/net/minecraft/server/PacketStatusInPing.java
@@ -23,8 +23,4 @@ public class PacketStatusInPing implements Packet<PacketStatusInListener> {
     public long a() {
         return this.a;
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketStatusInListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketStatusInStart.java b/src/main/java/net/minecraft/server/PacketStatusInStart.java
index d3b9b323b62ad73528c87bb09e392f8ac36d0223..7859b133c4bdf30aa2cf6ee7566dcc94d4e1c05e 100644
--- a/src/main/java/net/minecraft/server/PacketStatusInStart.java
+++ b/src/main/java/net/minecraft/server/PacketStatusInStart.java
@@ -13,8 +13,4 @@ public class PacketStatusInStart implements Packet<PacketStatusInListener> {
     public void a(PacketStatusInListener packetstatusinlistener) {
         packetstatusinlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketStatusInListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketStatusOutPong.java b/src/main/java/net/minecraft/server/PacketStatusOutPong.java
index 3a341e236331d817be725292fc2ad472e2619d47..e873de6e4e55ef083304c7ffa7cb8c88e79e564f 100644
--- a/src/main/java/net/minecraft/server/PacketStatusOutPong.java
+++ b/src/main/java/net/minecraft/server/PacketStatusOutPong.java
@@ -23,8 +23,4 @@ public class PacketStatusOutPong implements Packet<PacketStatusOutListener> {
     public void a(PacketStatusOutListener packetstatusoutlistener) {
         packetstatusoutlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketStatusOutListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java b/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java
index 0d9e640f107430f59124a3ad4932c831ebf02de7..7a106e45991f7933ae6a8c5d0b57c706a1660ebd 100644
--- a/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java
@@ -26,8 +26,4 @@ public class PacketStatusOutServerInfo implements Packet<PacketStatusOutListener
     public void a(PacketStatusOutListener packetstatusoutlistener) {
         packetstatusoutlistener.a(this);
     }
-
-    public void a(PacketListener packetlistener) {
-        this.a((PacketStatusOutListener) packetlistener);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PathfinderGoalAvoidTarget.java b/src/main/java/net/minecraft/server/PathfinderGoalAvoidTarget.java
index f29fac4ffd39c7822494fab4f01e026592400995..475170637a03a06fe73831289e1d730c9e22d2a8 100644
--- a/src/main/java/net/minecraft/server/PathfinderGoalAvoidTarget.java
+++ b/src/main/java/net/minecraft/server/PathfinderGoalAvoidTarget.java
@@ -47,7 +47,7 @@ public class PathfinderGoalAvoidTarget<T extends Entity> extends PathfinderGoal
         if (list.isEmpty()) {
             return false;
         } else {
-            this.b = (Entity) list.get(0);
+            this.b = (T) list.get(0);
             Vec3D vec3d = RandomPositionGenerator.b(this.a, 16, 7, new Vec3D(this.b.locX, this.b.locY, this.b.locZ));
 
             if (vec3d == null) {
diff --git a/src/main/java/net/minecraft/server/PlayerConnectionUtils.java b/src/main/java/net/minecraft/server/PlayerConnectionUtils.java
index f74b06794345a8be22ae02d23881c09125c1f52b..87c066c5cbeaaaaf46bdfc64784181f7cd3efecc 100644
--- a/src/main/java/net/minecraft/server/PlayerConnectionUtils.java
+++ b/src/main/java/net/minecraft/server/PlayerConnectionUtils.java
@@ -2,7 +2,7 @@ package net.minecraft.server;
 
 public class PlayerConnectionUtils {
 
-    public static <T extends PacketListener> void ensureMainThread(final Packet<T> packet, final T t0, IAsyncTaskHandler iasynctaskhandler) throws CancelledPacketHandleException {
+    public static <T extends PacketListener> void ensureMainThread(final Packet<T> packet, final T packetlistener, IAsyncTaskHandler iasynctaskhandler) throws CancelledPacketHandleException {
         if (!iasynctaskhandler.isMainThread()) {
             iasynctaskhandler.postToMainThread(new Runnable() {
                 public void run() {
diff --git a/src/main/java/net/minecraft/server/PlayerSelector.java b/src/main/java/net/minecraft/server/PlayerSelector.java
index 6437ea63e279be35d1b99556de560fff52152350..7b48073293ba8474e11b47d89071b751f0c67ca6 100644
--- a/src/main/java/net/minecraft/server/PlayerSelector.java
+++ b/src/main/java/net/minecraft/server/PlayerSelector.java
@@ -30,9 +30,9 @@ public class PlayerSelector {
     }
 
     public static <T extends Entity> T getEntity(ICommandListener icommandlistener, String s, Class<? extends T> oclass) {
-        List list = getPlayers(icommandlistener, s, oclass);
+        List<T> list = getPlayers(icommandlistener, s, oclass);
 
-        return list.size() == 1 ? (Entity) list.get(0) : null;
+        return list.size() == 1 ? list.get(0) : null;
     }
 
     public static IChatBaseComponent getPlayerNames(ICommandListener icommandlistener, String s) {
@@ -41,7 +41,7 @@ public class PlayerSelector {
         if (list.isEmpty()) {
             return null;
         } else {
-            ArrayList arraylist = Lists.newArrayList();
+            ArrayList<IChatBaseComponent> arraylist = Lists.newArrayList();
             Iterator iterator = list.iterator();
 
             while (iterator.hasNext()) {
@@ -50,7 +50,7 @@ public class PlayerSelector {
                 arraylist.add(entity.getScoreboardDisplayName());
             }
 
-            return CommandAbstract.a((List) arraylist);
+            return CommandAbstract.a(arraylist);
         }
     }
 
@@ -123,7 +123,7 @@ public class PlayerSelector {
 
     private static List<Predicate<Entity>> a(Map<String, String> map, String s) {
         ArrayList arraylist = Lists.newArrayList();
-        final String s1 = b(map, "type");
+        String s1 = b(map, "type");
         final boolean flag = s1 != null && s1.startsWith("!");
 
         if (flag) {
@@ -213,12 +213,13 @@ public class PlayerSelector {
 
     private static List<Predicate<Entity>> d(Map<String, String> map) {
         ArrayList arraylist = Lists.newArrayList();
-        final String s = b(map, "team");
+        String s = b(map, "team");
         final boolean flag = s != null && s.startsWith("!");
 
         if (flag) {
             s = s.substring(1);
         }
+        final String sFinal = s; // required to use in anonymous class below
 
         if (s != null) {
             arraylist.add(new Predicate() {
@@ -228,9 +229,9 @@ public class PlayerSelector {
                     } else {
                         EntityLiving entityliving = (EntityLiving) entity;
                         ScoreboardTeamBase scoreboardteambase = entityliving.getScoreboardTeam();
-                        String s = scoreboardteambase == null ? "" : scoreboardteambase.getName();
+                        String s1 = scoreboardteambase == null ? "" : scoreboardteambase.getName();
 
-                        return s.equals(s1) != flag;
+                        return sFinal.equals(s1) != flag;
                     }
                 }
 
@@ -305,17 +306,18 @@ public class PlayerSelector {
 
     private static List<Predicate<Entity>> f(Map<String, String> map) {
         ArrayList arraylist = Lists.newArrayList();
-        final String s = b(map, "name");
+        String s = b(map, "name");
         final boolean flag = s != null && s.startsWith("!");
 
         if (flag) {
             s = s.substring(1);
         }
+        final String sFinal = s; // required to use in anonymous class below
 
         if (s != null) {
             arraylist.add(new Predicate() {
                 public boolean a(Entity entity) {
-                    return entity.getName().equals(s) != flag;
+                    return entity.getName().equals(sFinal) != flag;
                 }
 
                 public boolean apply(Object object) {
@@ -338,7 +340,7 @@ public class PlayerSelector {
 
             arraylist.add(new Predicate() {
                 public boolean a(Entity entity) {
-                    int i = (int) entity.c(blockposition);
+                    int i1 = (int) entity.c(blockposition);
 
                     return (j < 0 || i >= k) && (l < 0 || i <= i1);
                 }
@@ -354,12 +356,10 @@ public class PlayerSelector {
 
     private static List<Predicate<Entity>> g(Map<String, String> map) {
         ArrayList arraylist = Lists.newArrayList();
-        final int i;
-        final int j;
 
         if (map.containsKey("rym") || map.containsKey("ry")) {
-            i = a(a(map, "rym", 0));
-            j = a(a(map, "ry", 359));
+            final int k = a(a(map, "rym", 0));
+            final int j = a(a(map, "ry", 359));
             arraylist.add(new Predicate() {
                 public boolean a(Entity entity) {
                     int i = PlayerSelector.a((int) Math.floor((double) entity.yaw));
@@ -374,8 +374,8 @@ public class PlayerSelector {
         }
 
         if (map.containsKey("rxm") || map.containsKey("rx")) {
-            i = a(a(map, "rxm", 0));
-            j = a(a(map, "rx", 359));
+            final int k = a(a(map, "rxm", 0));;
+            final int j = a(a(map, "rx", 359));
             arraylist.add(new Predicate() {
                 public boolean a(Entity entity) {
                     int i = PlayerSelector.a((int) Math.floor((double) entity.pitch));
@@ -478,7 +478,7 @@ public class PlayerSelector {
         Entity entity = icommandlistener.f();
 
         if (entity != null && oclass.isAssignableFrom(entity.getClass()) && i == 1 && ((List) list).contains(entity) && !"r".equals(s)) {
-            list = Lists.newArrayList(new Entity[] { entity});
+            list = (List) Lists.newArrayList(entity);
         }
 
         if (i != 0) {
diff --git a/src/main/java/net/minecraft/server/RegistryBlocks.java b/src/main/java/net/minecraft/server/RegistryBlocks.java
index dbf9cb453c104b6d3c49ce4f73711f5dffa47222..fa0c45082a811891ef66e4bdfbb3f77e013a4f8f 100644
--- a/src/main/java/net/minecraft/server/RegistryBlocks.java
+++ b/src/main/java/net/minecraft/server/RegistryBlocks.java
@@ -24,13 +24,13 @@ public class RegistryBlocks<K, V> extends RegistryMaterials<K, V> {
     }
 
     public V get(K k0) {
-        Object object = super.get(k0);
+        V object = super.get(k0);
 
         return object == null ? this.e : object;
     }
 
     public V a(int i) {
-        Object object = super.a(i);
+        V object = super.a(i);
 
         return object == null ? this.e : object;
     }
diff --git a/src/main/java/net/minecraft/server/RegistryDefault.java b/src/main/java/net/minecraft/server/RegistryDefault.java
index 041d833720ec76365b3dad4afdc08808aad4e3e0..09886175297394c9de9827f952acf2c6ade2059b 100644
--- a/src/main/java/net/minecraft/server/RegistryDefault.java
+++ b/src/main/java/net/minecraft/server/RegistryDefault.java
@@ -9,7 +9,7 @@ public class RegistryDefault<K, V> extends RegistrySimple<K, V> {
     }
 
     public V get(K k0) {
-        Object object = super.get(k0);
+        V object = super.get(k0);
 
         return object == null ? this.a : object;
     }
diff --git a/src/main/java/net/minecraft/server/RegistryID.java b/src/main/java/net/minecraft/server/RegistryID.java
index 0e2dac3d67a89f4ba99cca5130dd6a0d8a152b10..d9d458239d0f58e4e92092055c31f6b0b1d17116 100644
--- a/src/main/java/net/minecraft/server/RegistryID.java
+++ b/src/main/java/net/minecraft/server/RegistryID.java
@@ -18,7 +18,7 @@ public class RegistryID<T> implements Registry<T> {
         this.a.put(t0, Integer.valueOf(i));
 
         while (this.b.size() <= i) {
-            this.b.add((Object) null);
+            this.b.add(null);
         }
 
         this.b.set(i, t0);
diff --git a/src/main/java/net/minecraft/server/Scoreboard.java b/src/main/java/net/minecraft/server/Scoreboard.java
index c547cc4904ba180bd67cbc937f6792f327bec26e..5ec2075778668991e752d7feb39a8668b24f7e39 100644
--- a/src/main/java/net/minecraft/server/Scoreboard.java
+++ b/src/main/java/net/minecraft/server/Scoreboard.java
@@ -35,14 +35,9 @@ public class Scoreboard {
                 throw new IllegalArgumentException("An objective with the name \'" + s + "\' already exists!");
             } else {
                 scoreboardobjective = new ScoreboardObjective(this, s, iscoreboardcriteria);
-                Object object = (List) this.objectivesByCriteria.get(iscoreboardcriteria);
+                List<ScoreboardObjective> list = this.objectivesByCriteria.computeIfAbsent(iscoreboardcriteria, k -> Lists.newArrayList());
 
-                if (object == null) {
-                    object = Lists.newArrayList();
-                    this.objectivesByCriteria.put(iscoreboardcriteria, object);
-                }
-
-                ((List) object).add(scoreboardobjective);
+                list.add(scoreboardobjective);
                 this.objectivesByName.put(s, scoreboardobjective);
                 this.handleObjectiveAdded(scoreboardobjective);
                 return scoreboardobjective;
@@ -72,21 +67,9 @@ public class Scoreboard {
         if (s.length() > 40) {
             throw new IllegalArgumentException("The player name \'" + s + "\' is too long!");
         } else {
-            Object object = (Map) this.playerScores.get(s);
-
-            if (object == null) {
-                object = Maps.newHashMap();
-                this.playerScores.put(s, object);
-            }
-
-            ScoreboardScore scoreboardscore = (ScoreboardScore) ((Map) object).get(scoreboardobjective);
-
-            if (scoreboardscore == null) {
-                scoreboardscore = new ScoreboardScore(this, scoreboardobjective, s);
-                ((Map) object).put(scoreboardobjective, scoreboardscore);
-            }
+            Map<ScoreboardObjective, ScoreboardScore> map = this.playerScores.computeIfAbsent(s, k -> Maps.newHashMap());
 
-            return scoreboardscore;
+            return map.computeIfAbsent(scoreboardobjective, k -> new ScoreboardScore(this, scoreboardobjective, s));
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/ServerPing.java b/src/main/java/net/minecraft/server/ServerPing.java
index 04e231807feb005ab4b9eac4f1b478b8615d3176..eeb81004490293619fdbd966c423bb9b8c74a061 100644
--- a/src/main/java/net/minecraft/server/ServerPing.java
+++ b/src/main/java/net/minecraft/server/ServerPing.java
@@ -102,11 +102,11 @@ public class ServerPing {
             return jsonobject;
         }
 
-        public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
-            return this.a((ServerPing) object, type, jsonserializationcontext);
+        public JsonElement serialize(ServerPing object, Type type, JsonSerializationContext jsonserializationcontext) {
+            return this.a(object, type, jsonserializationcontext);
         }
 
-        public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
+        public ServerPing deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
             return this.a(jsonelement, type, jsondeserializationcontext);
         }
     }
@@ -147,11 +147,11 @@ public class ServerPing {
                 return jsonobject;
             }
 
-            public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
-                return this.a((ServerPing.ServerData) object, type, jsonserializationcontext);
+            public JsonElement serialize(ServerPing.ServerData object, Type type, JsonSerializationContext jsonserializationcontext) {
+                return this.a(object, type, jsonserializationcontext);
             }
 
-            public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
+            public ServerPing.ServerData deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
                 return this.a(jsonelement, type, jsondeserializationcontext);
             }
         }
@@ -235,11 +235,11 @@ public class ServerPing {
                 return jsonobject;
             }
 
-            public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
-                return this.a((ServerPing.ServerPingPlayerSample) object, type, jsonserializationcontext);
+            public JsonElement serialize(ServerPing.ServerPingPlayerSample object, Type type, JsonSerializationContext jsonserializationcontext) {
+                return this.a(object, type, jsonserializationcontext);
             }
 
-            public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
+            public ServerPing.ServerPingPlayerSample deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
                 return this.a(jsonelement, type, jsondeserializationcontext);
             }
         }
diff --git a/src/main/java/net/minecraft/server/ShapeDetector.java b/src/main/java/net/minecraft/server/ShapeDetector.java
index 325dcc6aeec30b78255a229bc4a7e1ee4b9fb0fe..765f8eb9d5dc9c0d5f229dd326c1ed2d3f4d77af 100644
--- a/src/main/java/net/minecraft/server/ShapeDetector.java
+++ b/src/main/java/net/minecraft/server/ShapeDetector.java
@@ -164,8 +164,8 @@ public class ShapeDetector {
             return new ShapeDetectorBlock(this.a, blockposition, this.b);
         }
 
-        public Object load(Object object) throws Exception {
-            return this.a((BlockPosition) object);
+        public ShapeDetectorBlock load(BlockPosition object) throws Exception {
+            return this.a(object);
         }
     }
 }
diff --git a/src/main/java/net/minecraft/server/ShapeDetectorBuilder.java b/src/main/java/net/minecraft/server/ShapeDetectorBuilder.java
index 1f89acc5294f07cf0be049733f34969a00389707..65b077daa948f23920506c74f9559db2c16f997a 100644
--- a/src/main/java/net/minecraft/server/ShapeDetectorBuilder.java
+++ b/src/main/java/net/minecraft/server/ShapeDetectorBuilder.java
@@ -52,8 +52,8 @@ public class ShapeDetectorBuilder {
                     for (int l = 0; l < k; ++l) {
                         char c0 = achar[l];
 
-                        if (!this.c.containsKey(Character.valueOf(c0))) {
-                            this.c.put(Character.valueOf(c0), (Object) null);
+                        if (!this.c.containsKey(c0)) {
+                            this.c.put(c0, null);
                         }
                     }
                 }
diff --git a/src/main/java/net/minecraft/server/SourceBlock.java b/src/main/java/net/minecraft/server/SourceBlock.java
index c64b427d3f3fc71c727fd9e0101415d0b2036a9a..7390678105d6a215779acef1f6f4f1e0e18df9d2 100644
--- a/src/main/java/net/minecraft/server/SourceBlock.java
+++ b/src/main/java/net/minecraft/server/SourceBlock.java
@@ -37,6 +37,6 @@ public class SourceBlock implements ISourceBlock {
     }
 
     public <T extends TileEntity> T getTileEntity() {
-        return this.a.getTileEntity(this.b);
+        return (T) this.a.getTileEntity(this.b);
     }
 }
diff --git a/src/main/java/net/minecraft/server/StatisticWrapper.java b/src/main/java/net/minecraft/server/StatisticWrapper.java
index 63fbf9447e1b7250613ee39e72c3d7fae35f3081..906aa3d7e54887a29e241a90abe50e8438f4e07c 100644
--- a/src/main/java/net/minecraft/server/StatisticWrapper.java
+++ b/src/main/java/net/minecraft/server/StatisticWrapper.java
@@ -16,7 +16,7 @@ public class StatisticWrapper {
     }
 
     public <T extends IJsonStatistic> T b() {
-        return this.b;
+        return (T) this.b;
     }
 
     public void a(IJsonStatistic ijsonstatistic) {
diff --git a/src/main/java/net/minecraft/server/WeightedRandom.java b/src/main/java/net/minecraft/server/WeightedRandom.java
index 2bbcfa3c7bbb9f304f4817dd1f9a260e7df366b1..58789a31ed2d1fdda2c33a576957c3ed9e30ec78 100644
--- a/src/main/java/net/minecraft/server/WeightedRandom.java
+++ b/src/main/java/net/minecraft/server/WeightedRandom.java
@@ -29,16 +29,16 @@ public class WeightedRandom {
     }
 
     public static <T extends WeightedRandom.WeightedRandomChoice> T a(Collection<T> collection, int i) {
-        Iterator iterator = collection.iterator();
+        Iterator<T> iterator = collection.iterator();
 
-        WeightedRandom.WeightedRandomChoice weightedrandom_weightedrandomchoice;
+        T weightedrandom_weightedrandomchoice;
 
         do {
             if (!iterator.hasNext()) {
                 return null;
             }
 
-            weightedrandom_weightedrandomchoice = (WeightedRandom.WeightedRandomChoice) iterator.next();
+            weightedrandom_weightedrandomchoice = iterator.next();
             i -= weightedrandom_weightedrandomchoice.a;
         } while (i >= 0);
 
diff --git a/src/main/java/net/minecraft/server/WhiteList.java b/src/main/java/net/minecraft/server/WhiteList.java
index 85085d5456044dc6b9984d1c56fe493f69b396b6..b25a0f60215281861b43ae5c765d669c43da3fe8 100644
--- a/src/main/java/net/minecraft/server/WhiteList.java
+++ b/src/main/java/net/minecraft/server/WhiteList.java
@@ -52,7 +52,7 @@ public class WhiteList extends JsonList<GameProfile, WhiteListEntry> {
         return (GameProfile) whitelistentry.getKey();
     }
 
-    protected String a(Object object) {
-        return this.b((GameProfile) object);
+    protected String a(GameProfile object) {
+        return this.b(object);
     }
 }
