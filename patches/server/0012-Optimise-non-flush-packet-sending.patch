From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Fri, 29 Oct 2021 05:24:16 -0400
Subject: [PATCH] Optimise non-flush packet sending

Places like entity tracking make heavy use of packet sending,
and internally netty will use some very expensive thread wakeup
calls when scheduling.

Thanks to various hacks in ProtocolLib as well as other
plugins, we cannot simply use a queue of packets to group
send on execute. We have to call execute for each packet.

Tux's suggestion here is exactly what was needed - tag
the Runnable indicating it should not make a wakeup call.

Big thanks to Tux for making this possible as I had given
up on this optimisation before he came along.

Locally this patch drops the entity tracker tick by a full 1.5x.

diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index fc6dea71ea0d1ec93d18c12952a1baed9d3234dc..123dcc5e354d8cebbdc068fb5e446bd014bc060e 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -308,8 +308,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
             }
             // PandaSpigot end
         } else {
-            this.channel.eventLoop().execute(new Runnable() {
-                public void run() {
+            Runnable command = () -> { // PandaSpigot - optimise packets that are not flushed
                     if (enumprotocol != enumprotocol1) {
                         NetworkManager.this.a(enumprotocol);
                     }
@@ -340,8 +339,15 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
                     packet.onPacketDispatchFinish(player, null);
                 }
                 // PandaSpigot end
-                }
-            });
+            };
+            // PandaSpigot start - optimise packets that are not flushed
+            if (!flush) {
+                io.netty.util.concurrent.AbstractEventExecutor.LazyRunnable run = command::run;
+                this.channel.eventLoop().execute(run);
+           } else {
+                this.channel.eventLoop().execute(command);
+           }
+            // PandaSpigot end
         }
 
     }
