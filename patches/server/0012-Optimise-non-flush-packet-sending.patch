From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Fri, 29 Oct 2021 08:25:50 -0400
Subject: [PATCH] Optimise non-flush packet sending

Places like entity tracking make heavy use of packet sending,
and internally netty will use some very expensive thread wakeup
calls when scheduling.

Thanks to various hacks in ProtocolLib as well as other
plugins, we cannot simply use a queue of packets to group
send on execute. We have to call execute for each packet.

Tux's suggestion here is exactly what was needed - tag
the Runnable indicating it should not make a wakeup call.

Big thanks to Tux for making this possible as I had given
up on this optimisation before he came along.

Locally this patch drops the entity tracker tick by a full 1.5x.

diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index a23b96476acd2b01464a61e716277157aba4c979..1dfd9f5ed6c2d5dd8735a4f01fe4c6c8ac14dbf3 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -304,8 +304,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
             }
             // PandaSpigot end
         } else {
-            this.channel.eventLoop().execute(new Runnable() {
-                public void run() {
+            Runnable command = () -> { // PandaSpigot - optimise packets that are not flushed
                     if (enumprotocol != enumprotocol1) {
                         NetworkManager.this.a(enumprotocol);
                     }
@@ -336,8 +335,15 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
                     packet.onPacketDispatchFinish(player, null);
                 }
                 // PandaSpigot end
-                }
-            });
+            };
+            // PandaSpigot start - optimise packets that are not flushed
+            if (!flush) {
+                io.netty.util.concurrent.AbstractEventExecutor.LazyRunnable run = command::run;
+                this.channel.eventLoop().execute(run);
+           } else {
+                this.channel.eventLoop().execute(command);
+           }
+            // PandaSpigot end
         }
 
     }
